

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Thu Jan 20 11:12:27 2022

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	dabs	1,0x7E,2
    13  0000                     
    14                           ; Version 2.20
    15                           ; Generated 12/02/2020 GMT
    16                           ; 
    17                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC16F877A Definitions
    46                           ; 
    47                           ; SFR Addresses
    48  0000                     	;# 
    49  0001                     	;# 
    50  0002                     	;# 
    51  0003                     	;# 
    52  0004                     	;# 
    53  0005                     	;# 
    54  0006                     	;# 
    55  0007                     	;# 
    56  0008                     	;# 
    57  0009                     	;# 
    58  000A                     	;# 
    59  000B                     	;# 
    60  000C                     	;# 
    61  000D                     	;# 
    62  000E                     	;# 
    63  000E                     	;# 
    64  000F                     	;# 
    65  0010                     	;# 
    66  0011                     	;# 
    67  0012                     	;# 
    68  0013                     	;# 
    69  0014                     	;# 
    70  0015                     	;# 
    71  0015                     	;# 
    72  0016                     	;# 
    73  0017                     	;# 
    74  0018                     	;# 
    75  0019                     	;# 
    76  001A                     	;# 
    77  001B                     	;# 
    78  001B                     	;# 
    79  001C                     	;# 
    80  001D                     	;# 
    81  001E                     	;# 
    82  001F                     	;# 
    83  0081                     	;# 
    84  0085                     	;# 
    85  0086                     	;# 
    86  0087                     	;# 
    87  0088                     	;# 
    88  0089                     	;# 
    89  008C                     	;# 
    90  008D                     	;# 
    91  008E                     	;# 
    92  0091                     	;# 
    93  0092                     	;# 
    94  0093                     	;# 
    95  0094                     	;# 
    96  0098                     	;# 
    97  0099                     	;# 
    98  009C                     	;# 
    99  009D                     	;# 
   100  009E                     	;# 
   101  009F                     	;# 
   102  010C                     	;# 
   103  010D                     	;# 
   104  010E                     	;# 
   105  010F                     	;# 
   106  018C                     	;# 
   107  018D                     	;# 
   108  0000                     	;# 
   109  0001                     	;# 
   110  0002                     	;# 
   111  0003                     	;# 
   112  0004                     	;# 
   113  0005                     	;# 
   114  0006                     	;# 
   115  0007                     	;# 
   116  0008                     	;# 
   117  0009                     	;# 
   118  000A                     	;# 
   119  000B                     	;# 
   120  000C                     	;# 
   121  000D                     	;# 
   122  000E                     	;# 
   123  000E                     	;# 
   124  000F                     	;# 
   125  0010                     	;# 
   126  0011                     	;# 
   127  0012                     	;# 
   128  0013                     	;# 
   129  0014                     	;# 
   130  0015                     	;# 
   131  0015                     	;# 
   132  0016                     	;# 
   133  0017                     	;# 
   134  0018                     	;# 
   135  0019                     	;# 
   136  001A                     	;# 
   137  001B                     	;# 
   138  001B                     	;# 
   139  001C                     	;# 
   140  001D                     	;# 
   141  001E                     	;# 
   142  001F                     	;# 
   143  0081                     	;# 
   144  0085                     	;# 
   145  0086                     	;# 
   146  0087                     	;# 
   147  0088                     	;# 
   148  0089                     	;# 
   149  008C                     	;# 
   150  008D                     	;# 
   151  008E                     	;# 
   152  0091                     	;# 
   153  0092                     	;# 
   154  0093                     	;# 
   155  0094                     	;# 
   156  0098                     	;# 
   157  0099                     	;# 
   158  009C                     	;# 
   159  009D                     	;# 
   160  009E                     	;# 
   161  009F                     	;# 
   162  010C                     	;# 
   163  010D                     	;# 
   164  010E                     	;# 
   165  010F                     	;# 
   166  018C                     	;# 
   167  018D                     	;# 
   168  0006                     _PORTB	set	6
   169  001A                     _RCREG	set	26
   170  0019                     _TXREG	set	25
   171  0018                     _RCSTA	set	24
   172  0065                     _RCIF	set	101
   173  0064                     _TXIF	set	100
   174  0086                     _TRISB	set	134
   175  0099                     _SPBRG	set	153
   176  0098                     _TXSTA	set	152
   177  043F                     _TRISC7	set	1087
   178  043E                     _TRISC6	set	1086
   179                           
   180                           	psect	strings
   181  0003                     __pstrings:
   182  0003                     stringtab:
   183  0003                     __stringtab:
   184  0003                     stringcode:	
   185                           ;	String table - string pointers are 1 byte each
   186                           
   187  0003                     stringdir:
   188  0003  3000               	movlw	high stringdir
   189  0004  008A               	movwf	10
   190  0005  0804               	movf	4,w
   191  0006  0A84               	incf	4,f
   192  0007  0782               	addwf	2,f
   193  0008                     __stringbase:
   194  0008  3400               	retlw	0
   195  0009                     __end_of__stringtab:
   196  0009                     STR_2:
   197  0009  3420               	retlw	32	;' '
   198  000A  344F               	retlw	79	;'O'
   199  000B  3455               	retlw	85	;'U'
   200  000C  3454               	retlw	84	;'T'
   201  000D  3450               	retlw	80	;'P'
   202  000E  3455               	retlw	85	;'U'
   203  000F  3454               	retlw	84	;'T'
   204  0010  343A               	retlw	58	;':'
   205  0011  344C               	retlw	76	;'L'
   206  0012  3445               	retlw	69	;'E'
   207  0013  3444               	retlw	68	;'D'
   208  0014  3420               	retlw	32	;' '
   209  0015  3431               	retlw	49	;'1'
   210  0016  3420               	retlw	32	;' '
   211  0017  3449               	retlw	73	;'I'
   212  0018  3453               	retlw	83	;'S'
   213  0019  3420               	retlw	32	;' '
   214  001A  344F               	retlw	79	;'O'
   215  001B  344E               	retlw	78	;'N'
   216  001C  340A               	retlw	10
   217  001D  3400               	retlw	0
   218  001E                     STR_3:
   219  001E  3420               	retlw	32	;' '
   220  001F  344F               	retlw	79	;'O'
   221  0020  3455               	retlw	85	;'U'
   222  0021  3454               	retlw	84	;'T'
   223  0022  3450               	retlw	80	;'P'
   224  0023  3455               	retlw	85	;'U'
   225  0024  3454               	retlw	84	;'T'
   226  0025  343A               	retlw	58	;':'
   227  0026  344C               	retlw	76	;'L'
   228  0027  3445               	retlw	69	;'E'
   229  0028  3444               	retlw	68	;'D'
   230  0029  3420               	retlw	32	;' '
   231  002A  3432               	retlw	50	;'2'
   232  002B  3420               	retlw	32	;' '
   233  002C  3449               	retlw	73	;'I'
   234  002D  3453               	retlw	83	;'S'
   235  002E  3420               	retlw	32	;' '
   236  002F  344F               	retlw	79	;'O'
   237  0030  344E               	retlw	78	;'N'
   238  0031  340A               	retlw	10
   239  0032  3400               	retlw	0
   240  0033                     STR_4:
   241  0033  3420               	retlw	32	;' '
   242  0034  344F               	retlw	79	;'O'
   243  0035  3455               	retlw	85	;'U'
   244  0036  3454               	retlw	84	;'T'
   245  0037  3450               	retlw	80	;'P'
   246  0038  3455               	retlw	85	;'U'
   247  0039  3454               	retlw	84	;'T'
   248  003A  343A               	retlw	58	;':'
   249  003B  344C               	retlw	76	;'L'
   250  003C  3445               	retlw	69	;'E'
   251  003D  3444               	retlw	68	;'D'
   252  003E  3420               	retlw	32	;' '
   253  003F  3433               	retlw	51	;'3'
   254  0040  3420               	retlw	32	;' '
   255  0041  3449               	retlw	73	;'I'
   256  0042  3453               	retlw	83	;'S'
   257  0043  3420               	retlw	32	;' '
   258  0044  344F               	retlw	79	;'O'
   259  0045  344E               	retlw	78	;'N'
   260  0046  340A               	retlw	10
   261  0047  3400               	retlw	0
   262  0048                     STR_5:
   263  0048  344F               	retlw	79	;'O'
   264  0049  3455               	retlw	85	;'U'
   265  004A  3454               	retlw	84	;'T'
   266  004B  3450               	retlw	80	;'P'
   267  004C  3455               	retlw	85	;'U'
   268  004D  3454               	retlw	84	;'T'
   269  004E  343A               	retlw	58	;':'
   270  004F  3420               	retlw	32	;' '
   271  0050  344C               	retlw	76	;'L'
   272  0051  3445               	retlw	69	;'E'
   273  0052  3444               	retlw	68	;'D'
   274  0053  3453               	retlw	83	;'S'
   275  0054  3420               	retlw	32	;' '
   276  0055  344F               	retlw	79	;'O'
   277  0056  3446               	retlw	70	;'F'
   278  0057  3446               	retlw	70	;'F'
   279  0058  340A               	retlw	10
   280  0059  3400               	retlw	0
   281  005A                     STR_1:
   282  005A  3449               	retlw	73	;'I'
   283  005B  344E               	retlw	78	;'N'
   284  005C  3450               	retlw	80	;'P'
   285  005D  3455               	retlw	85	;'U'
   286  005E  3454               	retlw	84	;'T'
   287  005F  343A               	retlw	58	;':'
   288  0060  340A               	retlw	10
   289  0061  3400               	retlw	0
   290                           
   291                           	psect	cinit
   292  07FC                     start_initialization:	
   293                           ; #config settings
   294                           
   295  07FC                     __initialization:
   296  07FC                     end_of_initialization:	
   297                           ;End of C runtime variable initialization code
   298                           
   299  07FC                     __end_of__initialization:
   300  07FC  0183               	clrf	3
   301  07FD  120A  118A  2F91   	ljmp	_main	;jump to C main() function
   302                           
   303                           	psect	cstackCOMMON
   304  0070                     __pcstackCOMMON:
   305  0070                     ?_uart:
   306  0070                     ??_uart:	
   307                           ; 1 bytes @ 0x0
   308                           
   309  0070                     ?_send:	
   310                           ; 1 bytes @ 0x0
   311                           
   312  0070                     ??_send:	
   313                           ; 1 bytes @ 0x0
   314                           
   315  0070                     ?_get:	
   316                           ; 1 bytes @ 0x0
   317                           
   318  0070                     ??_get:	
   319                           ; 1 bytes @ 0x0
   320                           
   321  0070                     ?_send_data:	
   322                           ; 1 bytes @ 0x0
   323                           
   324  0070                     ?_main:	
   325                           ; 1 bytes @ 0x0
   326                           
   327  0070                     send@a:	
   328                           ; 1 bytes @ 0x0
   329                           
   330                           
   331                           ; 1 bytes @ 0x0
   332  0070                     	ds	1
   333  0071                     ??_send_data:
   334                           
   335                           ; 1 bytes @ 0x1
   336  0071                     	ds	1
   337  0072                     send_data@x:
   338                           
   339                           ; 1 bytes @ 0x2
   340  0072                     	ds	1
   341  0073                     ??_main:
   342                           
   343                           ; 1 bytes @ 0x3
   344  0073                     	ds	2
   345  0075                     main@p:
   346                           
   347                           ; 2 bytes @ 0x5
   348  0075                     	ds	2
   349                           
   350                           	psect	maintext
   351  0791                     __pmaintext:	
   352 ;;
   353 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   354 ;;
   355 ;; *************** function _main *****************
   356 ;; Defined at:
   357 ;;		line 45 in file "newfile.c"
   358 ;; Parameters:    Size  Location     Type
   359 ;;		None
   360 ;; Auto vars:     Size  Location     Type
   361 ;;  p               2    5[COMMON] int 
   362 ;; Return value:  Size  Location     Type
   363 ;;                  1    wreg      void 
   364 ;; Registers used:
   365 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   366 ;; Tracked objects:
   367 ;;		On entry : B00/0
   368 ;;		On exit  : 0/0
   369 ;;		Unchanged: 0/0
   370 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   371 ;;      Params:         0       0       0       0       0
   372 ;;      Locals:         2       0       0       0       0
   373 ;;      Temps:          2       0       0       0       0
   374 ;;      Totals:         4       0       0       0       0
   375 ;;Total ram usage:        4 bytes
   376 ;; Hardware stack levels required when called: 2
   377 ;; This function calls:
   378 ;;		_get
   379 ;;		_send
   380 ;;		_send_data
   381 ;;		_uart
   382 ;; This function is called by:
   383 ;;		Startup code after reset
   384 ;; This function uses a non-reentrant model
   385 ;;
   386                           
   387                           
   388                           ;psect for function _main
   389  0791                     _main:
   390  0791                     l709:	
   391                           ;incstack = 0
   392                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   393                           
   394                           
   395                           ;newfile.c: 47: int p;;newfile.c: 48: TRISC6=0;
   396  0791  1683               	bsf	3,5	;RP0=1, select bank1
   397  0792  1303               	bcf	3,6	;RP1=0, select bank1
   398  0793  1307               	bcf	7,6	;volatile
   399                           
   400                           ;newfile.c: 49: TRISC7=1;
   401  0794  1787               	bsf	7,7	;volatile
   402  0795                     l711:
   403                           
   404                           ;newfile.c: 50: TRISB=0x00;
   405  0795  0186               	clrf	6	;volatile
   406                           
   407                           ;newfile.c: 51: PORTB=0;
   408  0796  1283               	bcf	3,5	;RP0=0, select bank0
   409  0797  1303               	bcf	3,6	;RP1=0, select bank0
   410  0798  0186               	clrf	6	;volatile
   411  0799                     l713:
   412                           
   413                           ;newfile.c: 52: uart();
   414  0799  120A  118A  2765  120A  118A  	fcall	_uart
   415  079E                     l715:
   416                           
   417                           ;newfile.c: 54: send_data("INPUT:\n");
   418  079E  3052               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   419  079F  120A  118A  2772  120A  118A  	fcall	_send_data
   420  07A4                     l717:
   421                           
   422                           ;newfile.c: 56: { p=get();
   423  07A4  120A  118A  2751  120A  118A  	fcall	_get
   424  07A9  00F3               	movwf	??_main
   425  07AA  01F4               	clrf	??_main+1
   426  07AB  0873               	movf	??_main,w
   427  07AC  00F5               	movwf	main@p
   428  07AD  0874               	movf	??_main+1,w
   429  07AE  00F6               	movwf	main@p+1
   430  07AF                     l719:
   431                           
   432                           ;newfile.c: 57: send(p);
   433  07AF  0875               	movf	main@p,w
   434  07B0  120A  118A  275B  120A  118A  	fcall	_send
   435  07B5                     l721:
   436                           
   437                           ;newfile.c: 61: if(p=='1')
   438  07B5  3031               	movlw	49
   439  07B6  0675               	xorwf	main@p,w
   440  07B7  0476               	iorwf	main@p+1,w
   441  07B8  1D03               	btfss	3,2
   442  07B9  2FBB               	goto	u91
   443  07BA  2FBC               	goto	u90
   444  07BB                     u91:
   445  07BB  2FC6               	goto	l727
   446  07BC                     u90:
   447  07BC                     l723:
   448                           
   449                           ;newfile.c: 62: { PORTB=0x02;
   450  07BC  3002               	movlw	2
   451  07BD  1283               	bcf	3,5	;RP0=0, select bank0
   452  07BE  1303               	bcf	3,6	;RP1=0, select bank0
   453  07BF  0086               	movwf	6	;volatile
   454  07C0                     l725:
   455                           
   456                           ;newfile.c: 63: send_data(" OUTPUT:LED 1 IS ON\n");
   457  07C0  3001               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   458  07C1  120A  118A  2772  120A  118A  	fcall	_send_data
   459  07C6                     l727:
   460                           
   461                           ;newfile.c: 64: };newfile.c: 66: if(p=='2')
   462  07C6  3032               	movlw	50
   463  07C7  0675               	xorwf	main@p,w
   464  07C8  0476               	iorwf	main@p+1,w
   465  07C9  1D03               	btfss	3,2
   466  07CA  2FCC               	goto	u101
   467  07CB  2FCD               	goto	u100
   468  07CC                     u101:
   469  07CC  2FD7               	goto	l733
   470  07CD                     u100:
   471  07CD                     l729:
   472                           
   473                           ;newfile.c: 67: { PORTB=0x04;
   474  07CD  3004               	movlw	4
   475  07CE  1283               	bcf	3,5	;RP0=0, select bank0
   476  07CF  1303               	bcf	3,6	;RP1=0, select bank0
   477  07D0  0086               	movwf	6	;volatile
   478  07D1                     l731:
   479                           
   480                           ;newfile.c: 68: send_data(" OUTPUT:LED 2 IS ON\n");
   481  07D1  3016               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
   482  07D2  120A  118A  2772  120A  118A  	fcall	_send_data
   483  07D7                     l733:
   484                           
   485                           ;newfile.c: 69: };newfile.c: 71: if(p=='3')
   486  07D7  3033               	movlw	51
   487  07D8  0675               	xorwf	main@p,w
   488  07D9  0476               	iorwf	main@p+1,w
   489  07DA  1D03               	btfss	3,2
   490  07DB  2FDD               	goto	u111
   491  07DC  2FDE               	goto	u110
   492  07DD                     u111:
   493  07DD  2FE8               	goto	l739
   494  07DE                     u110:
   495  07DE                     l735:
   496                           
   497                           ;newfile.c: 72: { PORTB=0x08;
   498  07DE  3008               	movlw	8
   499  07DF  1283               	bcf	3,5	;RP0=0, select bank0
   500  07E0  1303               	bcf	3,6	;RP1=0, select bank0
   501  07E1  0086               	movwf	6	;volatile
   502  07E2                     l737:
   503                           
   504                           ;newfile.c: 73: send_data(" OUTPUT:LED 3 IS ON\n");
   505  07E2  302B               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
   506  07E3  120A  118A  2772  120A  118A  	fcall	_send_data
   507  07E8                     l739:
   508                           
   509                           ;newfile.c: 74: };newfile.c: 76: if(p=='0')
   510  07E8  3030               	movlw	48
   511  07E9  0675               	xorwf	main@p,w
   512  07EA  0476               	iorwf	main@p+1,w
   513  07EB  1D03               	btfss	3,2
   514  07EC  2FEE               	goto	u121
   515  07ED  2FEF               	goto	u120
   516  07EE                     u121:
   517  07EE  2FA4               	goto	l717
   518  07EF                     u120:
   519  07EF                     l741:
   520                           
   521                           ;newfile.c: 77: { PORTB=0;
   522  07EF  1283               	bcf	3,5	;RP0=0, select bank0
   523  07F0  1303               	bcf	3,6	;RP1=0, select bank0
   524  07F1  0186               	clrf	6	;volatile
   525  07F2                     l743:
   526                           
   527                           ;newfile.c: 78: send_data("OUTPUT: LEDS OFF\n");
   528  07F2  3040               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
   529  07F3  120A  118A  2772  120A  118A  	fcall	_send_data
   530  07F8  2FA4               	goto	l717
   531  07F9  120A  118A  2800   	ljmp	start
   532  07FC                     __end_of_main:
   533                           
   534                           	psect	text1
   535  0765                     __ptext1:	
   536 ;; *************** function _uart *****************
   537 ;; Defined at:
   538 ;;		line 5 in file "newfile.c"
   539 ;; Parameters:    Size  Location     Type
   540 ;;		None
   541 ;; Auto vars:     Size  Location     Type
   542 ;;		None
   543 ;; Return value:  Size  Location     Type
   544 ;;                  1    wreg      void 
   545 ;; Registers used:
   546 ;;		wreg
   547 ;; Tracked objects:
   548 ;;		On entry : 0/0
   549 ;;		On exit  : 0/0
   550 ;;		Unchanged: 0/0
   551 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   552 ;;      Params:         0       0       0       0       0
   553 ;;      Locals:         0       0       0       0       0
   554 ;;      Temps:          0       0       0       0       0
   555 ;;      Totals:         0       0       0       0       0
   556 ;;Total ram usage:        0 bytes
   557 ;; Hardware stack levels used: 1
   558 ;; This function calls:
   559 ;;		Nothing
   560 ;; This function is called by:
   561 ;;		_main
   562 ;; This function uses a non-reentrant model
   563 ;;
   564                           
   565                           
   566                           ;psect for function _uart
   567  0765                     _uart:
   568  0765                     l649:	
   569                           ;incstack = 0
   570                           ; Regs used in _uart: [wreg]
   571                           
   572                           
   573                           ;newfile.c: 8: TXSTA =0x24;
   574  0765  3024               	movlw	36
   575  0766  1683               	bsf	3,5	;RP0=1, select bank1
   576  0767  1303               	bcf	3,6	;RP1=0, select bank1
   577  0768  0098               	movwf	24	;volatile
   578                           
   579                           ;newfile.c: 9: RCSTA =0x90;
   580  0769  3090               	movlw	144
   581  076A  1283               	bcf	3,5	;RP0=0, select bank0
   582  076B  1303               	bcf	3,6	;RP1=0, select bank0
   583  076C  0098               	movwf	24	;volatile
   584                           
   585                           ;newfile.c: 10: SPBRG = 129;
   586  076D  3081               	movlw	129
   587  076E  1683               	bsf	3,5	;RP0=1, select bank1
   588  076F  1303               	bcf	3,6	;RP1=0, select bank1
   589  0770  0099               	movwf	25	;volatile
   590  0771                     l25:
   591  0771  0008               	return
   592  0772                     __end_of_uart:
   593                           
   594                           	psect	text2
   595  0772                     __ptext2:	
   596 ;; *************** function _send_data *****************
   597 ;; Defined at:
   598 ;;		line 39 in file "newfile.c"
   599 ;; Parameters:    Size  Location     Type
   600 ;;  x               1    wreg     PTR unsigned char 
   601 ;;		 -> STR_5(18), STR_4(21), STR_3(21), STR_2(21), 
   602 ;;		 -> STR_1(8), 
   603 ;; Auto vars:     Size  Location     Type
   604 ;;  x               1    2[COMMON] PTR unsigned char 
   605 ;;		 -> STR_5(18), STR_4(21), STR_3(21), STR_2(21), 
   606 ;;		 -> STR_1(8), 
   607 ;; Return value:  Size  Location     Type
   608 ;;                  1    wreg      void 
   609 ;; Registers used:
   610 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   611 ;; Tracked objects:
   612 ;;		On entry : 0/0
   613 ;;		On exit  : 0/0
   614 ;;		Unchanged: 0/0
   615 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   616 ;;      Params:         0       0       0       0       0
   617 ;;      Locals:         1       0       0       0       0
   618 ;;      Temps:          1       0       0       0       0
   619 ;;      Totals:         2       0       0       0       0
   620 ;;Total ram usage:        2 bytes
   621 ;; Hardware stack levels used: 1
   622 ;; Hardware stack levels required when called: 1
   623 ;; This function calls:
   624 ;;		_send
   625 ;; This function is called by:
   626 ;;		_main
   627 ;; This function uses a non-reentrant model
   628 ;;
   629                           
   630                           
   631                           ;psect for function _send_data
   632  0772                     _send_data:
   633                           
   634                           ;incstack = 0
   635                           ; Regs used in _send_data: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   636                           ;send_data@x stored from wreg
   637  0772  00F2               	movwf	send_data@x
   638  0773                     l701:
   639                           
   640                           ;newfile.c: 41: while(*x)
   641  0773  2F84               	goto	l707
   642  0774                     l703:
   643                           
   644                           ;newfile.c: 42: send(*x++);
   645  0774  0872               	movf	send_data@x,w
   646  0775  0084               	movwf	4
   647  0776  120A  118A  2003  120A  118A  	fcall	stringdir
   648  077B  120A  118A  275B  120A  118A  	fcall	_send
   649  0780                     l705:
   650  0780  3001               	movlw	1
   651  0781  00F1               	movwf	??_send_data
   652  0782  0871               	movf	??_send_data,w
   653  0783  07F2               	addwf	send_data@x,f
   654  0784                     l707:
   655  0784  0872               	movf	send_data@x,w
   656  0785  0084               	movwf	4
   657  0786  120A  118A  2003  120A  118A  	fcall	stringdir
   658  078B  3A00               	xorlw	0
   659  078C  1D03               	skipz
   660  078D  2F8F               	goto	u81
   661  078E  2F90               	goto	u80
   662  078F                     u81:
   663  078F  2F74               	goto	l703
   664  0790                     u80:
   665  0790                     l43:
   666  0790  0008               	return
   667  0791                     __end_of_send_data:
   668                           
   669                           	psect	text3
   670  075B                     __ptext3:	
   671 ;; *************** function _send *****************
   672 ;; Defined at:
   673 ;;		line 24 in file "newfile.c"
   674 ;; Parameters:    Size  Location     Type
   675 ;;  a               1    wreg     unsigned char 
   676 ;; Auto vars:     Size  Location     Type
   677 ;;  a               1    0[COMMON] unsigned char 
   678 ;; Return value:  Size  Location     Type
   679 ;;                  1    wreg      void 
   680 ;; Registers used:
   681 ;;		wreg
   682 ;; Tracked objects:
   683 ;;		On entry : 0/0
   684 ;;		On exit  : 0/0
   685 ;;		Unchanged: 0/0
   686 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   687 ;;      Params:         0       0       0       0       0
   688 ;;      Locals:         1       0       0       0       0
   689 ;;      Temps:          0       0       0       0       0
   690 ;;      Totals:         1       0       0       0       0
   691 ;;Total ram usage:        1 bytes
   692 ;; Hardware stack levels used: 1
   693 ;; This function calls:
   694 ;;		Nothing
   695 ;; This function is called by:
   696 ;;		_send_data
   697 ;;		_main
   698 ;; This function uses a non-reentrant model
   699 ;;
   700                           
   701                           
   702                           ;psect for function _send
   703  075B                     _send:
   704                           
   705                           ;incstack = 0
   706                           ; Regs used in _send: [wreg]
   707                           ;send@a stored from wreg
   708  075B  00F0               	movwf	send@a
   709  075C                     l647:
   710                           
   711                           ;newfile.c: 26: TXREG = a ;
   712  075C  0870               	movf	send@a,w
   713  075D  1283               	bcf	3,5	;RP0=0, select bank0
   714  075E  1303               	bcf	3,6	;RP1=0, select bank0
   715  075F  0099               	movwf	25	;volatile
   716  0760                     l28:	
   717                           ;newfile.c: 27: while(!TXIF);
   718                           
   719  0760  1E0C               	btfss	12,4	;volatile
   720  0761  2F63               	goto	u11
   721  0762  2F64               	goto	u10
   722  0763                     u11:
   723  0763  2F60               	goto	l28
   724  0764                     u10:
   725  0764                     l31:
   726  0764  0008               	return
   727  0765                     __end_of_send:
   728                           
   729                           	psect	text4
   730  0751                     __ptext4:	
   731 ;; *************** function _get *****************
   732 ;; Defined at:
   733 ;;		line 32 in file "newfile.c"
   734 ;; Parameters:    Size  Location     Type
   735 ;;		None
   736 ;; Auto vars:     Size  Location     Type
   737 ;;		None
   738 ;; Return value:  Size  Location     Type
   739 ;;                  1    wreg      unsigned char 
   740 ;; Registers used:
   741 ;;		wreg
   742 ;; Tracked objects:
   743 ;;		On entry : 0/0
   744 ;;		On exit  : 0/0
   745 ;;		Unchanged: 0/0
   746 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   747 ;;      Params:         0       0       0       0       0
   748 ;;      Locals:         0       0       0       0       0
   749 ;;      Temps:          0       0       0       0       0
   750 ;;      Totals:         0       0       0       0       0
   751 ;;Total ram usage:        0 bytes
   752 ;; Hardware stack levels used: 1
   753 ;; This function calls:
   754 ;;		Nothing
   755 ;; This function is called by:
   756 ;;		_main
   757 ;; This function uses a non-reentrant model
   758 ;;
   759                           
   760                           
   761                           ;psect for function _get
   762  0751                     _get:
   763  0751                     l651:	
   764                           ;incstack = 0
   765                           ; Regs used in _get: [wreg]
   766                           
   767                           
   768                           ;newfile.c: 34: while(!RCIF)
   769  0751  2F53               	goto	l34
   770  0752                     l35:
   771                           
   772                           ;newfile.c: 35: RCIF=0;
   773  0752  128C               	bcf	12,5	;volatile
   774  0753                     l34:
   775  0753  1283               	bcf	3,5	;RP0=0, select bank0
   776  0754  1303               	bcf	3,6	;RP1=0, select bank0
   777  0755  1E8C               	btfss	12,5	;volatile
   778  0756  2F58               	goto	u21
   779  0757  2F59               	goto	u20
   780  0758                     u21:
   781  0758  2F52               	goto	l35
   782  0759                     u20:
   783  0759                     l653:
   784                           
   785                           ;newfile.c: 36: return RCREG;
   786  0759  081A               	movf	26,w	;volatile
   787  075A                     l37:
   788  075A  0008               	return
   789  075B                     __end_of_get:
   790  007E                     btemp	set	126	;btemp
   791  007E                     wtemp0	set	126

Data Sizes:
    Strings     89
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7       7
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    send_data@x	PTR unsigned char  size(1) Largest target is 21
		 -> STR_5(CODE[18]), STR_4(CODE[21]), STR_3(CODE[21]), STR_2(CODE[21]), 
		 -> STR_1(CODE[8]), 


Critical Paths under _main in COMMON

    _main->_send_data
    _send_data->_send

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0     351
                                              3 COMMON     4     4      0
                                _get
                               _send
                          _send_data
                               _uart
 ---------------------------------------------------------------------------------
 (1) _uart                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _send_data                                            2     2      0     225
                                              1 COMMON     2     2      0
                               _send
 ---------------------------------------------------------------------------------
 (2) _send                                                 1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _get                                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _get
   _send
   _send_data
     _send
   _uart

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      7       7       1       50.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Thu Jan 20 11:12:27 2022

                      pc 0002                       l31 0764                       l25 0771  
                     l34 0753                       l35 0752                       l43 0790  
                     l28 0760                       l37 075A                       u10 0764  
                     u11 0763                       u20 0759                       u21 0758  
                     u80 0790                       u81 078F                       u90 07BC  
                     u91 07BB                       fsr 0004                      l701 0773  
                    l703 0774                      l711 0795                      l705 0780  
                    l721 07B5                      l713 0799                      l651 0751  
                    l707 0784                      l731 07D1                      l723 07BC  
                    l715 079E                      l653 0759                      l741 07EF  
                    l733 07D7                      l725 07C0                      l717 07A4  
                    l709 0791                      l647 075C                      l743 07F2  
                    l735 07DE                      l727 07C6                      l719 07AF  
                    l649 0765                      l737 07E2                      l729 07CD  
                    l739 07E8                      u100 07CD                      u101 07CC  
                    u110 07DE                      u111 07DD                      u120 07EF  
                    u121 07EE                      _get 0751                      fsr0 0004  
                   ?_get 0070                     STR_1 005A                     STR_2 0009  
                   STR_3 001E                     STR_4 0033                     STR_5 0048  
                   _RCIF 0065                     _TXIF 0064                     _main 0791  
                   _send 075B                     _uart 0765                     btemp 007E  
                   start 0000                    ??_get 0070                    ?_main 0070  
                  ?_send 0070                    ?_uart 0070                    _RCREG 001A  
                  _RCSTA 0018                    _SPBRG 0099                    _PORTB 0006  
                  _TRISB 0086                    _TXREG 0019                    _TXSTA 0098  
                  main@p 0075                    pclath 000A                    send@a 0070  
                  status 0003                    wtemp0 007E          __initialization 07FC  
           __end_of_main 07FC             __end_of_send 0765             __end_of_uart 0772  
                 ??_main 0073                   ??_send 0070                   ??_uart 0070  
                 _TRISC6 043E                   _TRISC7 043F  __end_of__initialization 07FC  
         __pcstackCOMMON 0070               __pmaintext 0791       __size_of_send_data 001F  
             __stringtab 0003                  __ptext1 0765                  __ptext2 0772  
                __ptext3 075B                  __ptext4 0751             __size_of_get 000A  
   end_of_initialization 07FC        __end_of_send_data 0791      start_initialization 07FC  
            __end_of_get 075B                ___latbits 0002                __pstrings 0003  
             send_data@x 0072                _send_data 0772              __stringbase 0008  
             ?_send_data 0070       __end_of__stringtab 0009            __size_of_main 006B  
          __size_of_send 000A            __size_of_uart 000D              ??_send_data 0071  
              stringcode 0003                 stringdir 0003                 stringtab 0003  
