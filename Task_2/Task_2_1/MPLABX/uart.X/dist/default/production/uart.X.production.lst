

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Sun Jan 16 17:34:12 2022

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	dabs	1,0x7E,2
    13  0000                     
    14                           ; Version 2.20
    15                           ; Generated 12/02/2020 GMT
    16                           ; 
    17                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC16F877A Definitions
    46                           ; 
    47                           ; SFR Addresses
    48  0000                     	;# 
    49  0001                     	;# 
    50  0002                     	;# 
    51  0003                     	;# 
    52  0004                     	;# 
    53  0005                     	;# 
    54  0006                     	;# 
    55  0007                     	;# 
    56  0008                     	;# 
    57  0009                     	;# 
    58  000A                     	;# 
    59  000B                     	;# 
    60  000C                     	;# 
    61  000D                     	;# 
    62  000E                     	;# 
    63  000E                     	;# 
    64  000F                     	;# 
    65  0010                     	;# 
    66  0011                     	;# 
    67  0012                     	;# 
    68  0013                     	;# 
    69  0014                     	;# 
    70  0015                     	;# 
    71  0015                     	;# 
    72  0016                     	;# 
    73  0017                     	;# 
    74  0018                     	;# 
    75  0019                     	;# 
    76  001A                     	;# 
    77  001B                     	;# 
    78  001B                     	;# 
    79  001C                     	;# 
    80  001D                     	;# 
    81  001E                     	;# 
    82  001F                     	;# 
    83  0081                     	;# 
    84  0085                     	;# 
    85  0086                     	;# 
    86  0087                     	;# 
    87  0088                     	;# 
    88  0089                     	;# 
    89  008C                     	;# 
    90  008D                     	;# 
    91  008E                     	;# 
    92  0091                     	;# 
    93  0092                     	;# 
    94  0093                     	;# 
    95  0094                     	;# 
    96  0098                     	;# 
    97  0099                     	;# 
    98  009C                     	;# 
    99  009D                     	;# 
   100  009E                     	;# 
   101  009F                     	;# 
   102  010C                     	;# 
   103  010D                     	;# 
   104  010E                     	;# 
   105  010F                     	;# 
   106  018C                     	;# 
   107  018D                     	;# 
   108  0000                     	;# 
   109  0001                     	;# 
   110  0002                     	;# 
   111  0003                     	;# 
   112  0004                     	;# 
   113  0005                     	;# 
   114  0006                     	;# 
   115  0007                     	;# 
   116  0008                     	;# 
   117  0009                     	;# 
   118  000A                     	;# 
   119  000B                     	;# 
   120  000C                     	;# 
   121  000D                     	;# 
   122  000E                     	;# 
   123  000E                     	;# 
   124  000F                     	;# 
   125  0010                     	;# 
   126  0011                     	;# 
   127  0012                     	;# 
   128  0013                     	;# 
   129  0014                     	;# 
   130  0015                     	;# 
   131  0015                     	;# 
   132  0016                     	;# 
   133  0017                     	;# 
   134  0018                     	;# 
   135  0019                     	;# 
   136  001A                     	;# 
   137  001B                     	;# 
   138  001B                     	;# 
   139  001C                     	;# 
   140  001D                     	;# 
   141  001E                     	;# 
   142  001F                     	;# 
   143  0081                     	;# 
   144  0085                     	;# 
   145  0086                     	;# 
   146  0087                     	;# 
   147  0088                     	;# 
   148  0089                     	;# 
   149  008C                     	;# 
   150  008D                     	;# 
   151  008E                     	;# 
   152  0091                     	;# 
   153  0092                     	;# 
   154  0093                     	;# 
   155  0094                     	;# 
   156  0098                     	;# 
   157  0099                     	;# 
   158  009C                     	;# 
   159  009D                     	;# 
   160  009E                     	;# 
   161  009F                     	;# 
   162  010C                     	;# 
   163  010D                     	;# 
   164  010E                     	;# 
   165  010F                     	;# 
   166  018C                     	;# 
   167  018D                     	;# 
   168  001A                     _RCREG	set	26
   169  0019                     _TXREG	set	25
   170  0018                     _RCSTA	set	24
   171  0033                     _RB3	set	51
   172  0065                     _RCIF	set	101
   173  0064                     _TXIF	set	100
   174  0099                     _SPBRG	set	153
   175  0098                     _TXSTA	set	152
   176  043F                     _TRISC7	set	1087
   177  043E                     _TRISC6	set	1086
   178                           
   179                           	psect	strings
   180  0003                     __pstrings:
   181  0003                     stringtab:
   182  0003                     __stringtab:
   183  0003                     stringcode:	
   184                           ;	String table - string pointers are 1 byte each
   185                           
   186  0003                     stringdir:
   187  0003  3000               	movlw	high stringdir
   188  0004  008A               	movwf	10
   189  0005  0804               	movf	4,w
   190  0006  0A84               	incf	4,f
   191  0007  0782               	addwf	2,f
   192  0008                     __stringbase:
   193  0008  3400               	retlw	0
   194  0009                     __end_of__stringtab:
   195  0009                     STR_1:
   196  0009  3448               	retlw	72	;'H'
   197  000A  3465               	retlw	101	;'e'
   198  000B  346C               	retlw	108	;'l'
   199  000C  346C               	retlw	108	;'l'
   200  000D  346F               	retlw	111	;'o'
   201  000E  3420               	retlw	32	;' '
   202  000F  3457               	retlw	87	;'W'
   203  0010  346F               	retlw	111	;'o'
   204  0011  3472               	retlw	114	;'r'
   205  0012  346C               	retlw	108	;'l'
   206  0013  3464               	retlw	100	;'d'
   207  0014  3421               	retlw	33	;'!'
   208  0015  3421               	retlw	33	;'!'
   209  0016  340A               	retlw	10
   210  0017  340D               	retlw	13
   211  0018  340D               	retlw	13
   212  0019  3400               	retlw	0
   213                           
   214                           	psect	cinit
   215  07FC                     start_initialization:	
   216                           ; #config settings
   217                           
   218  07FC                     __initialization:
   219  07FC                     end_of_initialization:	
   220                           ;End of C runtime variable initialization code
   221                           
   222  07FC                     __end_of__initialization:
   223  07FC  0183               	clrf	3
   224  07FD  120A  118A  2FC0   	ljmp	_main	;jump to C main() function
   225                           
   226                           	psect	cstackCOMMON
   227  0070                     __pcstackCOMMON:
   228  0070                     ?_uart:
   229  0070                     ??_uart:	
   230                           ; 1 bytes @ 0x0
   231                           
   232  0070                     ?_send:	
   233                           ; 1 bytes @ 0x0
   234                           
   235  0070                     ??_send:	
   236                           ; 1 bytes @ 0x0
   237                           
   238  0070                     ?_get:	
   239                           ; 1 bytes @ 0x0
   240                           
   241  0070                     ??_get:	
   242                           ; 1 bytes @ 0x0
   243                           
   244  0070                     ?_send_data:	
   245                           ; 1 bytes @ 0x0
   246                           
   247  0070                     ?_main:	
   248                           ; 1 bytes @ 0x0
   249                           
   250  0070                     send@a:	
   251                           ; 1 bytes @ 0x0
   252                           
   253                           
   254                           ; 1 bytes @ 0x0
   255  0070                     	ds	1
   256  0071                     ??_send_data:
   257                           
   258                           ; 1 bytes @ 0x1
   259  0071                     	ds	1
   260  0072                     send_data@x:
   261                           
   262                           ; 1 bytes @ 0x2
   263  0072                     	ds	1
   264  0073                     ??_main:
   265                           
   266                           	psect	maintext
   267  07C0                     __pmaintext:	
   268                           ; 1 bytes @ 0x3
   269 ;;
   270 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   271 ;;
   272 ;; *************** function _main *****************
   273 ;; Defined at:
   274 ;;		line 46 in file "newfile.c"
   275 ;; Parameters:    Size  Location     Type
   276 ;;		None
   277 ;; Auto vars:     Size  Location     Type
   278 ;;		None
   279 ;; Return value:  Size  Location     Type
   280 ;;                  1    wreg      void 
   281 ;; Registers used:
   282 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   283 ;; Tracked objects:
   284 ;;		On entry : B00/0
   285 ;;		On exit  : 0/0
   286 ;;		Unchanged: 0/0
   287 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   288 ;;      Params:         0       0       0       0       0
   289 ;;      Locals:         0       0       0       0       0
   290 ;;      Temps:          0       0       0       0       0
   291 ;;      Totals:         0       0       0       0       0
   292 ;;Total ram usage:        0 bytes
   293 ;; Hardware stack levels required when called: 2
   294 ;; This function calls:
   295 ;;		_get
   296 ;;		_send
   297 ;;		_send_data
   298 ;;		_uart
   299 ;; This function is called by:
   300 ;;		Startup code after reset
   301 ;; This function uses a non-reentrant model
   302 ;;
   303                           
   304                           
   305                           ;psect for function _main
   306  07C0                     _main:
   307  07C0                     l677:	
   308                           ;incstack = 0
   309                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   310                           
   311                           
   312                           ;newfile.c: 48: TRISC6=0;
   313  07C0  1683               	bsf	3,5	;RP0=1, select bank1
   314  07C1  1303               	bcf	3,6	;RP1=0, select bank1
   315  07C2  1307               	bcf	7,6	;volatile
   316                           
   317                           ;newfile.c: 49: TRISC7=1;
   318  07C3  1787               	bsf	7,7	;volatile
   319  07C4                     l679:
   320                           
   321                           ;newfile.c: 50: uart();
   322  07C4  120A  118A  27AF  120A  118A  	fcall	_uart
   323  07C9                     l681:
   324                           
   325                           ;newfile.c: 52: send_data("Hello World!!\n\r\r");
   326  07C9  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   327  07CA  120A  118A  27DD  120A  118A  	fcall	_send_data
   328  07CF                     l683:
   329                           
   330                           ;newfile.c: 54: { send(get());
   331  07CF  120A  118A  2799  120A  118A  	fcall	_get
   332  07D4  120A  118A  27A4  120A  118A  	fcall	_send
   333  07D9  2FCF               	goto	l683
   334  07DA  120A  118A  2800   	ljmp	start
   335  07DD                     __end_of_main:
   336                           
   337                           	psect	text1
   338  07AF                     __ptext1:	
   339 ;; *************** function _uart *****************
   340 ;; Defined at:
   341 ;;		line 5 in file "newfile.c"
   342 ;; Parameters:    Size  Location     Type
   343 ;;		None
   344 ;; Auto vars:     Size  Location     Type
   345 ;;		None
   346 ;; Return value:  Size  Location     Type
   347 ;;                  1    wreg      void 
   348 ;; Registers used:
   349 ;;		wreg
   350 ;; Tracked objects:
   351 ;;		On entry : 0/0
   352 ;;		On exit  : 0/0
   353 ;;		Unchanged: 0/0
   354 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   355 ;;      Params:         0       0       0       0       0
   356 ;;      Locals:         0       0       0       0       0
   357 ;;      Temps:          0       0       0       0       0
   358 ;;      Totals:         0       0       0       0       0
   359 ;;Total ram usage:        0 bytes
   360 ;; Hardware stack levels used: 1
   361 ;; This function calls:
   362 ;;		Nothing
   363 ;; This function is called by:
   364 ;;		_main
   365 ;; This function uses a non-reentrant model
   366 ;;
   367                           
   368                           
   369                           ;psect for function _uart
   370  07AF                     _uart:
   371  07AF                     l643:	
   372                           ;incstack = 0
   373                           ; Regs used in _uart: [wreg]
   374                           
   375                           
   376                           ;newfile.c: 8: TXSTA =0x24;
   377  07AF  3024               	movlw	36
   378  07B0  1683               	bsf	3,5	;RP0=1, select bank1
   379  07B1  1303               	bcf	3,6	;RP1=0, select bank1
   380  07B2  0098               	movwf	24	;volatile
   381                           
   382                           ;newfile.c: 9: RCSTA =0x90;
   383  07B3  3090               	movlw	144
   384  07B4  1283               	bcf	3,5	;RP0=0, select bank0
   385  07B5  1303               	bcf	3,6	;RP1=0, select bank0
   386  07B6  0098               	movwf	24	;volatile
   387                           
   388                           ;newfile.c: 10: SPBRG = 129;
   389  07B7  3081               	movlw	129
   390  07B8  1683               	bsf	3,5	;RP0=1, select bank1
   391  07B9  1303               	bcf	3,6	;RP1=0, select bank1
   392  07BA  0099               	movwf	25	;volatile
   393  07BB                     l645:
   394                           
   395                           ;newfile.c: 21: TXIF = RCIF = 0;
   396  07BB  1283               	bcf	3,5	;RP0=0, select bank0
   397  07BC  1303               	bcf	3,6	;RP1=0, select bank0
   398  07BD  128C               	bcf	12,5	;volatile
   399  07BE  120C               	bcf	12,4	;volatile
   400  07BF                     l23:
   401  07BF  0008               	return
   402  07C0                     __end_of_uart:
   403                           
   404                           	psect	text2
   405  07DD                     __ptext2:	
   406 ;; *************** function _send_data *****************
   407 ;; Defined at:
   408 ;;		line 40 in file "newfile.c"
   409 ;; Parameters:    Size  Location     Type
   410 ;;  x               1    wreg     PTR unsigned char 
   411 ;;		 -> STR_1(17), 
   412 ;; Auto vars:     Size  Location     Type
   413 ;;  x               1    2[COMMON] PTR unsigned char 
   414 ;;		 -> STR_1(17), 
   415 ;; Return value:  Size  Location     Type
   416 ;;                  1    wreg      void 
   417 ;; Registers used:
   418 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   419 ;; Tracked objects:
   420 ;;		On entry : 0/0
   421 ;;		On exit  : 0/0
   422 ;;		Unchanged: 0/0
   423 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   424 ;;      Params:         0       0       0       0       0
   425 ;;      Locals:         1       0       0       0       0
   426 ;;      Temps:          1       0       0       0       0
   427 ;;      Totals:         2       0       0       0       0
   428 ;;Total ram usage:        2 bytes
   429 ;; Hardware stack levels used: 1
   430 ;; Hardware stack levels required when called: 1
   431 ;; This function calls:
   432 ;;		_send
   433 ;; This function is called by:
   434 ;;		_main
   435 ;; This function uses a non-reentrant model
   436 ;;
   437                           
   438                           
   439                           ;psect for function _send_data
   440  07DD                     _send_data:
   441                           
   442                           ;incstack = 0
   443                           ; Regs used in _send_data: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   444                           ;send_data@x stored from wreg
   445  07DD  00F2               	movwf	send_data@x
   446  07DE                     l669:
   447                           
   448                           ;newfile.c: 42: while(*x)
   449  07DE  2FEF               	goto	l675
   450  07DF                     l671:
   451                           
   452                           ;newfile.c: 43: send(*x++);
   453  07DF  0872               	movf	send_data@x,w
   454  07E0  0084               	movwf	4
   455  07E1  120A  118A  2003  120A  118A  	fcall	stringdir
   456  07E6  120A  118A  27A4  120A  118A  	fcall	_send
   457  07EB                     l673:
   458  07EB  3001               	movlw	1
   459  07EC  00F1               	movwf	??_send_data
   460  07ED  0871               	movf	??_send_data,w
   461  07EE  07F2               	addwf	send_data@x,f
   462  07EF                     l675:
   463  07EF  0872               	movf	send_data@x,w
   464  07F0  0084               	movwf	4
   465  07F1  120A  118A  2003  120A  118A  	fcall	stringdir
   466  07F6  3A00               	xorlw	0
   467  07F7  1D03               	skipz
   468  07F8  2FFA               	goto	u41
   469  07F9  2FFB               	goto	u40
   470  07FA                     u41:
   471  07FA  2FDF               	goto	l671
   472  07FB                     u40:
   473  07FB                     l41:
   474  07FB  0008               	return
   475  07FC                     __end_of_send_data:
   476                           
   477                           	psect	text3
   478  07A4                     __ptext3:	
   479 ;; *************** function _send *****************
   480 ;; Defined at:
   481 ;;		line 24 in file "newfile.c"
   482 ;; Parameters:    Size  Location     Type
   483 ;;  a               1    wreg     unsigned char 
   484 ;; Auto vars:     Size  Location     Type
   485 ;;  a               1    0[COMMON] unsigned char 
   486 ;; Return value:  Size  Location     Type
   487 ;;                  1    wreg      void 
   488 ;; Registers used:
   489 ;;		wreg
   490 ;; Tracked objects:
   491 ;;		On entry : 0/0
   492 ;;		On exit  : 0/0
   493 ;;		Unchanged: 0/0
   494 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   495 ;;      Params:         0       0       0       0       0
   496 ;;      Locals:         1       0       0       0       0
   497 ;;      Temps:          0       0       0       0       0
   498 ;;      Totals:         1       0       0       0       0
   499 ;;Total ram usage:        1 bytes
   500 ;; Hardware stack levels used: 1
   501 ;; This function calls:
   502 ;;		Nothing
   503 ;; This function is called by:
   504 ;;		_send_data
   505 ;;		_main
   506 ;; This function uses a non-reentrant model
   507 ;;
   508                           
   509                           
   510                           ;psect for function _send
   511  07A4                     _send:
   512                           
   513                           ;incstack = 0
   514                           ; Regs used in _send: [wreg]
   515                           ;send@a stored from wreg
   516  07A4  00F0               	movwf	send@a
   517  07A5                     l641:
   518                           
   519                           ;newfile.c: 26: TXREG = a ;
   520  07A5  0870               	movf	send@a,w
   521  07A6  1283               	bcf	3,5	;RP0=0, select bank0
   522  07A7  1303               	bcf	3,6	;RP1=0, select bank0
   523  07A8  0099               	movwf	25	;volatile
   524  07A9                     l26:	
   525                           ;newfile.c: 27: while(!TXIF);
   526                           
   527  07A9  1E0C               	btfss	12,4	;volatile
   528  07AA  2FAC               	goto	u11
   529  07AB  2FAD               	goto	u10
   530  07AC                     u11:
   531  07AC  2FA9               	goto	l26
   532  07AD                     u10:
   533  07AD                     l28:
   534                           
   535                           ;newfile.c: 28: TXIF=0;
   536  07AD  120C               	bcf	12,4	;volatile
   537  07AE                     l29:
   538  07AE  0008               	return
   539  07AF                     __end_of_send:
   540                           
   541                           	psect	text4
   542  0799                     __ptext4:	
   543 ;; *************** function _get *****************
   544 ;; Defined at:
   545 ;;		line 32 in file "newfile.c"
   546 ;; Parameters:    Size  Location     Type
   547 ;;		None
   548 ;; Auto vars:     Size  Location     Type
   549 ;;		None
   550 ;; Return value:  Size  Location     Type
   551 ;;                  1    wreg      unsigned char 
   552 ;; Registers used:
   553 ;;		wreg
   554 ;; Tracked objects:
   555 ;;		On entry : 0/0
   556 ;;		On exit  : 0/0
   557 ;;		Unchanged: 0/0
   558 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   559 ;;      Params:         0       0       0       0       0
   560 ;;      Locals:         0       0       0       0       0
   561 ;;      Temps:          0       0       0       0       0
   562 ;;      Totals:         0       0       0       0       0
   563 ;;Total ram usage:        0 bytes
   564 ;; Hardware stack levels used: 1
   565 ;; This function calls:
   566 ;;		Nothing
   567 ;; This function is called by:
   568 ;;		_main
   569 ;; This function uses a non-reentrant model
   570 ;;
   571                           
   572                           
   573                           ;psect for function _get
   574  0799                     _get:
   575  0799                     l647:	
   576                           ;incstack = 0
   577                           ; Regs used in _get: [wreg]
   578                           
   579                           
   580                           ;newfile.c: 34: RB3=1;
   581  0799  1283               	bcf	3,5	;RP0=0, select bank0
   582  079A  1303               	bcf	3,6	;RP1=0, select bank0
   583  079B  1586               	bsf	6,3	;volatile
   584                           
   585                           ;newfile.c: 35: while(!RCIF)
   586  079C  2F9E               	goto	l32
   587  079D                     l33:
   588                           
   589                           ;newfile.c: 36: RCIF=0;
   590  079D  128C               	bcf	12,5	;volatile
   591  079E                     l32:
   592  079E  1E8C               	btfss	12,5	;volatile
   593  079F  2FA1               	goto	u21
   594  07A0  2FA2               	goto	u20
   595  07A1                     u21:
   596  07A1  2F9D               	goto	l33
   597  07A2                     u20:
   598  07A2                     l649:
   599                           
   600                           ;newfile.c: 37: return RCREG;
   601  07A2  081A               	movf	26,w	;volatile
   602  07A3                     l35:
   603  07A3  0008               	return
   604  07A4                     __end_of_get:
   605  007E                     btemp	set	126	;btemp
   606  007E                     wtemp0	set	126

Data Sizes:
    Strings     17
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      3       3
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    send_data@x	PTR unsigned char  size(1) Largest target is 17
		 -> STR_1(CODE[17]), 


Critical Paths under _main in COMMON

    _main->_send_data
    _send_data->_send

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     108
                                _get
                               _send
                          _send_data
                               _uart
 ---------------------------------------------------------------------------------
 (1) _uart                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _send_data                                            2     2      0      93
                                              1 COMMON     2     2      0
                               _send
 ---------------------------------------------------------------------------------
 (2) _send                                                 1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _get                                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _get
   _send
   _send_data
     _send
   _uart

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      3       3       1       21.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Sun Jan 16 17:34:12 2022

                      pc 0002                       l23 07BF                       l32 079E  
                     l33 079D                       l41 07FB                       l26 07A9  
                     l35 07A3                       l28 07AD                       l29 07AE  
                     u10 07AD                       u11 07AC                       u20 07A2  
                     u21 07A1                       u40 07FB                       u41 07FA  
                     fsr 0004                      l641 07A5                      l643 07AF  
                    l645 07BB                      l647 0799                      l671 07DF  
                    l649 07A2                      l673 07EB                      l681 07C9  
                    l675 07EF                      l683 07CF                      l669 07DE  
                    l677 07C0                      l679 07C4                      _RB3 0033  
                    _get 0799                      fsr0 0004                     ?_get 0070  
                   STR_1 0009                     _RCIF 0065                     _TXIF 0064  
                   _main 07C0                     _send 07A4                     _uart 07AF  
                   btemp 007E                     start 0000                    ??_get 0070  
                  ?_main 0070                    ?_send 0070                    ?_uart 0070  
                  _RCREG 001A                    _RCSTA 0018                    _SPBRG 0099  
                  _TXREG 0019                    _TXSTA 0098                    pclath 000A  
                  send@a 0070                    status 0003                    wtemp0 007E  
        __initialization 07FC             __end_of_main 07DD             __end_of_send 07AF  
           __end_of_uart 07C0                   ??_main 0073                   ??_send 0070  
                 ??_uart 0070                   _TRISC6 043E                   _TRISC7 043F  
__end_of__initialization 07FC           __pcstackCOMMON 0070               __pmaintext 07C0  
     __size_of_send_data 001F               __stringtab 0003                  __ptext1 07AF  
                __ptext2 07DD                  __ptext3 07A4                  __ptext4 0799  
           __size_of_get 000B     end_of_initialization 07FC        __end_of_send_data 07FC  
    start_initialization 07FC              __end_of_get 07A4                ___latbits 0002  
              __pstrings 0003               send_data@x 0072                _send_data 07DD  
            __stringbase 0008               ?_send_data 0070       __end_of__stringtab 0009  
          __size_of_main 001D            __size_of_send 000B            __size_of_uart 0011  
            ??_send_data 0071                stringcode 0003                 stringdir 0003  
               stringtab 0003  
