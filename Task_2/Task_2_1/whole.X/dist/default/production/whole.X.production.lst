

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Sat Jan 29 00:59:14 2022

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	intentry,global,class=CODE,delta=2
    11                           	dabs	1,0x7E,2
    12  0000                     
    13                           ; Version 2.20
    14                           ; Generated 12/02/2020 GMT
    15                           ; 
    16                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    17                           ; All rights reserved.
    18                           ; 
    19                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    20                           ; 
    21                           ; Redistribution and use in source and binary forms, with or without modification, are
    22                           ; permitted provided that the following conditions are met:
    23                           ; 
    24                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    25                           ;        conditions and the following disclaimer.
    26                           ; 
    27                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    28                           ;        of conditions and the following disclaimer in the documentation and/or other
    29                           ;        materials provided with the distribution.
    30                           ; 
    31                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    32                           ;        software without specific prior written permission.
    33                           ; 
    34                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    35                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    36                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    37                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    38                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    39                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    40                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    41                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    42                           ; 
    43                           ; 
    44                           ; Code-generator required, PIC16F877A Definitions
    45                           ; 
    46                           ; SFR Addresses
    47  0000                     	;# 
    48  0001                     	;# 
    49  0002                     	;# 
    50  0003                     	;# 
    51  0004                     	;# 
    52  0005                     	;# 
    53  0006                     	;# 
    54  0007                     	;# 
    55  0008                     	;# 
    56  0009                     	;# 
    57  000A                     	;# 
    58  000B                     	;# 
    59  000C                     	;# 
    60  000D                     	;# 
    61  000E                     	;# 
    62  000E                     	;# 
    63  000F                     	;# 
    64  0010                     	;# 
    65  0011                     	;# 
    66  0012                     	;# 
    67  0013                     	;# 
    68  0014                     	;# 
    69  0015                     	;# 
    70  0015                     	;# 
    71  0016                     	;# 
    72  0017                     	;# 
    73  0018                     	;# 
    74  0019                     	;# 
    75  001A                     	;# 
    76  001B                     	;# 
    77  001B                     	;# 
    78  001C                     	;# 
    79  001D                     	;# 
    80  001E                     	;# 
    81  001F                     	;# 
    82  0081                     	;# 
    83  0085                     	;# 
    84  0086                     	;# 
    85  0087                     	;# 
    86  0088                     	;# 
    87  0089                     	;# 
    88  008C                     	;# 
    89  008D                     	;# 
    90  008E                     	;# 
    91  0091                     	;# 
    92  0092                     	;# 
    93  0093                     	;# 
    94  0094                     	;# 
    95  0098                     	;# 
    96  0099                     	;# 
    97  009C                     	;# 
    98  009D                     	;# 
    99  009E                     	;# 
   100  009F                     	;# 
   101  010C                     	;# 
   102  010D                     	;# 
   103  010E                     	;# 
   104  010F                     	;# 
   105  018C                     	;# 
   106  018D                     	;# 
   107  0000                     	;# 
   108  0001                     	;# 
   109  0002                     	;# 
   110  0003                     	;# 
   111  0004                     	;# 
   112  0005                     	;# 
   113  0006                     	;# 
   114  0007                     	;# 
   115  0008                     	;# 
   116  0009                     	;# 
   117  000A                     	;# 
   118  000B                     	;# 
   119  000C                     	;# 
   120  000D                     	;# 
   121  000E                     	;# 
   122  000E                     	;# 
   123  000F                     	;# 
   124  0010                     	;# 
   125  0011                     	;# 
   126  0012                     	;# 
   127  0013                     	;# 
   128  0014                     	;# 
   129  0015                     	;# 
   130  0015                     	;# 
   131  0016                     	;# 
   132  0017                     	;# 
   133  0018                     	;# 
   134  0019                     	;# 
   135  001A                     	;# 
   136  001B                     	;# 
   137  001B                     	;# 
   138  001C                     	;# 
   139  001D                     	;# 
   140  001E                     	;# 
   141  001F                     	;# 
   142  0081                     	;# 
   143  0085                     	;# 
   144  0086                     	;# 
   145  0087                     	;# 
   146  0088                     	;# 
   147  0089                     	;# 
   148  008C                     	;# 
   149  008D                     	;# 
   150  008E                     	;# 
   151  0091                     	;# 
   152  0092                     	;# 
   153  0093                     	;# 
   154  0094                     	;# 
   155  0098                     	;# 
   156  0099                     	;# 
   157  009C                     	;# 
   158  009D                     	;# 
   159  009E                     	;# 
   160  009F                     	;# 
   161  010C                     	;# 
   162  010D                     	;# 
   163  010E                     	;# 
   164  010F                     	;# 
   165  018C                     	;# 
   166  018D                     	;# 
   167  0006                     _PORTB	set	6
   168  0006                     _PORTBbits	set	6
   169  0001                     _TMR0	set	1
   170  000B                     _INTCONbits	set	11
   171  005A                     _TMR0IF	set	90
   172  0081                     _OPTION_REGbits	set	129
   173  0438                     _TRISC0	set	1080
   174  0430                     _TRISB0	set	1072
   175  0435                     _TRISB5	set	1077
   176  0434                     _TRISB4	set	1076
   177  0433                     _TRISB3	set	1075
   178  0432                     _TRISB2	set	1074
   179  0431                     _TRISB1	set	1073
   180                           
   181                           	psect	cinit
   182  0015                     start_initialization:	
   183                           ; #config settings
   184                           
   185  0015                     __initialization:
   186                           
   187                           ; Clear objects allocated to BANK0
   188  0015  1283               	bcf	3,5	;RP0=0, select bank0
   189  0016  1303               	bcf	3,6	;RP1=0, select bank0
   190  0017  01A0               	clrf	__pbssBANK0& (0+127)
   191  0018  01A1               	clrf	(__pbssBANK0+1)& (0+127)
   192  0019  01A2               	clrf	(__pbssBANK0+2)& (0+127)
   193  001A  01A3               	clrf	(__pbssBANK0+3)& (0+127)
   194  001B  01A4               	clrf	(__pbssBANK0+4)& (0+127)
   195  001C  01A5               	clrf	(__pbssBANK0+5)& (0+127)
   196  001D  01A6               	clrf	(__pbssBANK0+6)& (0+127)
   197  001E  01A7               	clrf	(__pbssBANK0+7)& (0+127)
   198  001F  01A8               	clrf	(__pbssBANK0+8)& (0+127)
   199  0020  01A9               	clrf	(__pbssBANK0+9)& (0+127)
   200  0021                     end_of_initialization:	
   201                           ;End of C runtime variable initialization code
   202                           
   203  0021                     __end_of__initialization:
   204  0021  0183               	clrf	3
   205  0022  120A  118A  2897   	ljmp	_main	;jump to C main() function
   206                           
   207                           	psect	bssBANK0
   208  0020                     __pbssBANK0:
   209  0020                     _c:
   210  0020                     	ds	10
   211                           
   212                           	psect	cstackCOMMON
   213  0070                     __pcstackCOMMON:
   214  0070                     ?_blink:
   215  0070                     ??_blink:	
   216                           ; 1 bytes @ 0x0
   217                           
   218  0070                     ?_main:	
   219                           ; 1 bytes @ 0x0
   220                           
   221                           
   222                           ; 1 bytes @ 0x0
   223  0070                     	ds	6
   224  0076                     blink@i:
   225                           
   226                           ; 2 bytes @ 0x6
   227  0076                     	ds	2
   228                           
   229                           	psect	cstackBANK0
   230  0000                     __pcstackBANK0:
   231  0000                     ??_main:
   232                           
   233                           	psect	maintext
   234  0097                     __pmaintext:	
   235                           ; 1 bytes @ 0x0
   236 ;;
   237 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   238 ;;
   239 ;; *************** function _main *****************
   240 ;; Defined at:
   241 ;;		line 66 in file "newmain.c"
   242 ;; Parameters:    Size  Location     Type
   243 ;;		None
   244 ;; Auto vars:     Size  Location     Type
   245 ;;		None
   246 ;; Return value:  Size  Location     Type
   247 ;;                  1    wreg      void 
   248 ;; Registers used:
   249 ;;		status,2
   250 ;; Tracked objects:
   251 ;;		On entry : B00/0
   252 ;;		On exit  : 0/0
   253 ;;		Unchanged: 0/0
   254 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   255 ;;      Params:         0       0       0       0       0
   256 ;;      Locals:         0       0       0       0       0
   257 ;;      Temps:          0       0       0       0       0
   258 ;;      Totals:         0       0       0       0       0
   259 ;;Total ram usage:        0 bytes
   260 ;; Hardware stack levels required when called: 1
   261 ;; This function calls:
   262 ;;		Nothing
   263 ;; This function is called by:
   264 ;;		Startup code after reset
   265 ;; This function uses a non-reentrant model
   266 ;;
   267                           
   268                           
   269                           ;psect for function _main
   270  0097                     _main:
   271  0097                     l720:	
   272                           ;incstack = 0
   273                           ; Regs used in _main: [status,2]
   274                           
   275                           
   276                           ;newmain.c: 68: INTCONbits.GIE = 1;
   277  0097  178B               	bsf	11,7	;volatile
   278                           
   279                           ;newmain.c: 69: INTCONbits.INTE = 1;
   280  0098  160B               	bsf	11,4	;volatile
   281                           
   282                           ;newmain.c: 70: INTCONbits.PEIE = 1;
   283  0099  170B               	bsf	11,6	;volatile
   284                           
   285                           ;newmain.c: 71: OPTION_REGbits.INTEDG = 0;
   286  009A  1683               	bsf	3,5	;RP0=1, select bank1
   287  009B  1303               	bcf	3,6	;RP1=0, select bank1
   288  009C  1301               	bcf	1,6	;volatile
   289                           
   290                           ;newmain.c: 72: TRISB1=0;
   291  009D  1086               	bcf	6,1	;volatile
   292                           
   293                           ;newmain.c: 73: TRISB2=0;
   294  009E  1106               	bcf	6,2	;volatile
   295                           
   296                           ;newmain.c: 74: TRISB3=0;
   297  009F  1186               	bcf	6,3	;volatile
   298                           
   299                           ;newmain.c: 75: TRISB4=0;
   300  00A0  1206               	bcf	6,4	;volatile
   301                           
   302                           ;newmain.c: 76: TRISB5=0;
   303  00A1  1286               	bcf	6,5	;volatile
   304                           
   305                           ;newmain.c: 77: TRISB0=1;
   306  00A2  1406               	bsf	6,0	;volatile
   307                           
   308                           ;newmain.c: 78: TRISC0=1;
   309  00A3  1407               	bsf	7,0	;volatile
   310                           
   311                           ;newmain.c: 79: OPTION_REGbits.PS2=0;
   312  00A4  1101               	bcf	1,2	;volatile
   313                           
   314                           ;newmain.c: 80: OPTION_REGbits.PS1=0;
   315  00A5  1081               	bcf	1,1	;volatile
   316                           
   317                           ;newmain.c: 81: OPTION_REGbits.PS0=1;
   318  00A6  1401               	bsf	1,0	;volatile
   319                           
   320                           ;newmain.c: 82: OPTION_REGbits.PSA=0;
   321  00A7  1181               	bcf	1,3	;volatile
   322                           
   323                           ;newmain.c: 83: OPTION_REGbits.T0CS=0;
   324  00A8  1281               	bcf	1,5	;volatile
   325  00A9                     l722:
   326                           
   327                           ;newmain.c: 86: PORTB =0x00;
   328  00A9  1283               	bcf	3,5	;RP0=0, select bank0
   329  00AA  0186               	clrf	6	;volatile
   330  00AB  28A9               	goto	l722
   331  00AC  120A  118A  2812   	ljmp	start
   332  00AF                     __end_of_main:
   333                           
   334                           	psect	text1
   335  0025                     __ptext1:	
   336 ;; *************** function _blink *****************
   337 ;; Defined at:
   338 ;;		line 4 in file "newmain.c"
   339 ;; Parameters:    Size  Location     Type
   340 ;;		None
   341 ;; Auto vars:     Size  Location     Type
   342 ;;  i               2    6[COMMON] int 
   343 ;;  g               2    0        int 
   344 ;; Return value:  Size  Location     Type
   345 ;;                  1    wreg      void 
   346 ;; Registers used:
   347 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
   348 ;; Tracked objects:
   349 ;;		On entry : 0/0
   350 ;;		On exit  : 0/0
   351 ;;		Unchanged: 0/0
   352 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   353 ;;      Params:         0       0       0       0       0
   354 ;;      Locals:         2       0       0       0       0
   355 ;;      Temps:          6       0       0       0       0
   356 ;;      Totals:         8       0       0       0       0
   357 ;;Total ram usage:        8 bytes
   358 ;; Hardware stack levels used: 1
   359 ;; This function calls:
   360 ;;		Nothing
   361 ;; This function is called by:
   362 ;;		Interrupt level 1
   363 ;; This function uses a non-reentrant model
   364 ;;
   365                           
   366                           
   367                           ;psect for function _blink
   368  0025                     _blink:
   369  0025                     i1l684:
   370                           
   371                           ;newmain.c: 6: if( INTCONbits.INTF == 1)
   372  0025  1C8B               	btfss	11,1	;volatile
   373  0026  2828               	goto	u7_21
   374  0027  2829               	goto	u7_20
   375  0028                     u7_21:
   376  0028  288A               	goto	i1l44
   377  0029                     u7_20:
   378  0029                     i1l686:
   379                           
   380                           ;newmain.c: 7: { int i;;newmain.c: 8: int g;;newmain.c: 9: TMR0=126;
   381  0029  307E               	movlw	126
   382  002A  0081               	movwf	1	;volatile
   383  002B                     i1l688:
   384                           
   385                           ;newmain.c: 11: c[0]=0;
   386  002B  01A0               	clrf	_c
   387  002C                     i1l690:
   388                           
   389                           ;newmain.c: 12: INTCONbits.TMR0IE=1;
   390  002C  168B               	bsf	11,5	;volatile
   391  002D                     i1l692:
   392                           
   393                           ;newmain.c: 13: if( TMR0IF == 1)
   394  002D  1D0B               	btfss	11,2	;volatile
   395  002E  2830               	goto	u8_21
   396  002F  2831               	goto	u8_20
   397  0030                     u8_21:
   398  0030  2857               	goto	i1l706
   399  0031                     u8_20:
   400  0031                     i1l694:
   401                           
   402                           ;newmain.c: 14: {;newmain.c: 15: for (i=8;i>0;i--)
   403  0031  3008               	movlw	8
   404  0032  00F6               	movwf	blink@i
   405  0033  3000               	movlw	0
   406  0034  00F7               	movwf	blink@i+1
   407  0035                     i1l700:
   408                           
   409                           ;newmain.c: 17: {;newmain.c: 19: c[i]=PORTBbits.RB0;
   410  0035  0876               	movf	blink@i,w
   411  0036  3E20               	addlw	(low (_c| 0))& (0+255)
   412  0037  0084               	movwf	4
   413  0038  3000               	movlw	0
   414  0039  1283               	bcf	3,5	;RP0=0, select bank0
   415  003A  1303               	bcf	3,6	;RP1=0, select bank0
   416  003B  1806               	btfsc	6,0	;volatile
   417  003C  3001               	movlw	1
   418  003D  1383               	bcf	3,7	;select IRP bank0
   419  003E  0080               	movwf	0
   420  003F                     i1l702:
   421  003F  30FF               	movlw	255
   422  0040  07F6               	addwf	blink@i,f
   423  0041  1803               	skipnc
   424  0042  0AF7               	incf	blink@i+1,f
   425  0043  30FF               	movlw	255
   426  0044  07F7               	addwf	blink@i+1,f
   427  0045                     i1l704:
   428  0045  0877               	movf	blink@i+1,w
   429  0046  3A80               	xorlw	128
   430  0047  00FF               	movwf	btemp+1
   431  0048  3080               	movlw	128
   432  0049  027F               	subwf	btemp+1,w
   433  004A  1D03               	skipz
   434  004B  284E               	goto	u9_25
   435  004C  3001               	movlw	1
   436  004D  0276               	subwf	blink@i,w
   437  004E                     u9_25:
   438  004E  1803               	skipnc
   439  004F  2851               	goto	u9_21
   440  0050  2852               	goto	u9_20
   441  0051                     u9_21:
   442  0051  2835               	goto	i1l700
   443  0052                     u9_20:
   444  0052                     i1l38:
   445                           
   446                           ;newmain.c: 22: };newmain.c: 23: c[9]=1;
   447  0052  1283               	bcf	3,5	;RP0=0, select bank0
   448  0053  1303               	bcf	3,6	;RP1=0, select bank0
   449  0054  01A9               	clrf	_c+9
   450  0055  0AA9               	incf	_c+9,f
   451                           
   452                           ;newmain.c: 26: TMR0IF = 0;
   453  0056  110B               	bcf	11,2	;volatile
   454  0057                     i1l706:
   455                           
   456                           ;newmain.c: 27: };newmain.c: 30: if (c[6]==1)
   457  0057  0326               	decf	_c+6,w
   458  0058  1D03               	btfss	3,2
   459  0059  285B               	goto	u10_21
   460  005A  285C               	goto	u10_20
   461  005B                     u10_21:
   462  005B  2868               	goto	i1l710
   463  005C                     u10_20:
   464  005C                     i1l708:
   465                           
   466                           ;newmain.c: 31: {;newmain.c: 32: PORTB=0x02;
   467  005C  3002               	movlw	2
   468  005D  0086               	movwf	6	;volatile
   469                           
   470                           ;newmain.c: 33: _delay(25000);
   471  005E  3021               	movlw	33
   472  005F  00F1               	movwf	??_blink+1
   473  0060  3076               	movlw	118
   474  0061  00F0               	movwf	??_blink
   475  0062                     u13_27:
   476  0062  0BF0               	decfsz	??_blink,f
   477  0063  2862               	goto	u13_27
   478  0064  0BF1               	decfsz	??_blink+1,f
   479  0065  2862               	goto	u13_27
   480  0066  0000               	nop
   481                           
   482                           ;newmain.c: 34: }
   483  0067  2889               	goto	i1l718
   484  0068                     i1l710:
   485                           
   486                           ;newmain.c: 35: else if(c[8]==1)
   487  0068  0328               	decf	_c+8,w
   488  0069  1D03               	btfss	3,2
   489  006A  286C               	goto	u11_21
   490  006B  286D               	goto	u11_20
   491  006C                     u11_21:
   492  006C  2879               	goto	i1l714
   493  006D                     u11_20:
   494  006D                     i1l712:
   495                           
   496                           ;newmain.c: 36: {;newmain.c: 37: PORTB=0x04;
   497  006D  3004               	movlw	4
   498  006E  0086               	movwf	6	;volatile
   499                           
   500                           ;newmain.c: 38: _delay(25000);
   501  006F  3021               	movlw	33
   502  0070  00F1               	movwf	??_blink+1
   503  0071  3076               	movlw	118
   504  0072  00F0               	movwf	??_blink
   505  0073                     u14_27:
   506  0073  0BF0               	decfsz	??_blink,f
   507  0074  2873               	goto	u14_27
   508  0075  0BF1               	decfsz	??_blink+1,f
   509  0076  2873               	goto	u14_27
   510  0077  0000               	nop
   511                           
   512                           ;newmain.c: 39: }
   513  0078  2889               	goto	i1l718
   514  0079                     i1l714:
   515                           
   516                           ;newmain.c: 40: else if(c[5]==1)
   517  0079  0325               	decf	_c+5,w
   518  007A  1D03               	btfss	3,2
   519  007B  287D               	goto	u12_21
   520  007C  287E               	goto	u12_20
   521  007D                     u12_21:
   522  007D  2889               	goto	i1l718
   523  007E                     u12_20:
   524  007E                     i1l716:
   525                           
   526                           ;newmain.c: 41: {;newmain.c: 42: PORTB=0x08;
   527  007E  3008               	movlw	8
   528  007F  0086               	movwf	6	;volatile
   529                           
   530                           ;newmain.c: 43: _delay(25000);
   531  0080  3021               	movlw	33
   532  0081  00F1               	movwf	??_blink+1
   533  0082  3076               	movlw	118
   534  0083  00F0               	movwf	??_blink
   535  0084                     u15_27:
   536  0084  0BF0               	decfsz	??_blink,f
   537  0085  2884               	goto	u15_27
   538  0086  0BF1               	decfsz	??_blink+1,f
   539  0087  2884               	goto	u15_27
   540  0088  0000               	nop
   541  0089                     i1l718:
   542                           
   543                           ;newmain.c: 44: };newmain.c: 62: INTCONbits.INTF = 0;
   544  0089  108B               	bcf	11,1	;volatile
   545  008A                     i1l44:
   546  008A  0875               	movf	??_blink+5,w
   547  008B  1283               	bcf	3,5	;RP0=0, select bank0
   548  008C  1303               	bcf	3,6	;RP1=0, select bank0
   549  008D  00FF               	movwf	btemp+1
   550  008E  0874               	movf	??_blink+4,w
   551  008F  008A               	movwf	10
   552  0090  0873               	movf	??_blink+3,w
   553  0091  0084               	movwf	4
   554  0092  0E72               	swapf	??_blink+2,w
   555  0093  0083               	movwf	3
   556  0094  0EFE               	swapf	btemp,f
   557  0095  0E7E               	swapf	btemp,w
   558  0096  0009               	retfie
   559  0097                     __end_of_blink:
   560  007E                     btemp	set	126	;btemp
   561  007E                     wtemp0	set	126
   562                           
   563                           	psect	intentry
   564  0004                     __pintentry:	
   565                           ;incstack = 0
   566                           ; Regs used in _blink: [wreg-fsr0h+status,2+status,0+btemp+1]
   567                           
   568  0004                     interrupt_function:
   569  007E                     saved_w	set	btemp
   570  0004  00FE               	movwf	btemp
   571  0005  0E03               	swapf	3,w
   572  0006  00F2               	movwf	??_blink+2
   573  0007  0804               	movf	4,w
   574  0008  00F3               	movwf	??_blink+3
   575  0009  080A               	movf	10,w
   576  000A  00F4               	movwf	??_blink+4
   577  000B  1283               	bcf	3,5	;RP0=0, select bank0
   578  000C  1303               	bcf	3,6	;RP1=0, select bank0
   579  000D  087F               	movf	btemp+1,w
   580  000E  00F5               	movwf	??_blink+5
   581  000F  120A  118A  2825   	ljmp	_blink

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         10
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8       8
    BANK0            80      0      10
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _blink in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _blink in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _blink in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _blink in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _blink in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (1) _blink                                               10    10      0      68
                                              0 COMMON     8     8      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 _blink (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       8       1       57.1%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      12       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       A       5       12.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      12      12        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Sat Jan 29 00:59:14 2022

                      _c 0020                      l720 0097                      l722 00A9  
                    fsr0 0004                      indf 0000                     i1l44 008A  
                   i1l38 0052                     _TMR0 0001                     u7_20 0029  
                   u7_21 0028                     u8_20 0031                     u8_21 0030  
                   u9_20 0052                     u9_21 0051                     u9_25 004E  
                   _main 0097                     btemp 007E                     start 0012  
                  ?_main 0070                    i1l700 0035                    i1l710 0068  
                  i1l702 003F                    i1l712 006D                    i1l704 0045  
                  i1l714 0079                    i1l706 0057                    i1l716 007E  
                  i1l708 005C                    i1l718 0089                    i1l690 002C  
                  i1l692 002D                    i1l684 0025                    i1l694 0031  
                  i1l686 0029                    i1l688 002B                    u10_20 005C  
                  u10_21 005B                    u11_20 006D                    u11_21 006C  
                  u12_20 007E                    u12_21 007D                    u13_27 0062  
                  u14_27 0073                    u15_27 0084                    _PORTB 0006  
                  _blink 0025                    pclath 000A                    status 0003  
                  wtemp0 007E          __initialization 0015             __end_of_main 00AF  
                 ??_main 0000                   ?_blink 0070                   _TMR0IF 005A  
                 _TRISB0 0430                   _TRISB1 0431                   _TRISB2 0432  
                 _TRISC0 0438                   _TRISB3 0433                   _TRISB4 0434  
                 _TRISB5 0435                   blink@i 0076                   saved_w 007E  
__end_of__initialization 0021           __pcstackCOMMON 0070            __end_of_blink 0097  
         _OPTION_REGbits 0081                  ??_blink 0070               __pbssBANK0 0020  
             __pmaintext 0097               __pintentry 0004                  __ptext1 0025  
   end_of_initialization 0021                _PORTBbits 0006      start_initialization 0015  
              ___latbits 0002            __pcstackBANK0 0000           __size_of_blink 0072  
      interrupt_function 0004            __size_of_main 0018               _INTCONbits 000B  
               intlevel1 0000  
