

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Sun Dec 26 17:34:22 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	intentry,global,class=CODE,delta=2
    10                           	dabs	1,0x7E,2
    11  0000                     
    12                           ; Version 2.20
    13                           ; Generated 12/02/2020 GMT
    14                           ; 
    15                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    16                           ; All rights reserved.
    17                           ; 
    18                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    19                           ; 
    20                           ; Redistribution and use in source and binary forms, with or without modification, are
    21                           ; permitted provided that the following conditions are met:
    22                           ; 
    23                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    24                           ;        conditions and the following disclaimer.
    25                           ; 
    26                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    27                           ;        of conditions and the following disclaimer in the documentation and/or other
    28                           ;        materials provided with the distribution.
    29                           ; 
    30                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    31                           ;        software without specific prior written permission.
    32                           ; 
    33                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    34                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    35                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    36                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    37                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    38                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    39                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    40                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    41                           ; 
    42                           ; 
    43                           ; Code-generator required, PIC16F877A Definitions
    44                           ; 
    45                           ; SFR Addresses
    46  0000                     	;# 
    47  0001                     	;# 
    48  0002                     	;# 
    49  0003                     	;# 
    50  0004                     	;# 
    51  0005                     	;# 
    52  0006                     	;# 
    53  0007                     	;# 
    54  0008                     	;# 
    55  0009                     	;# 
    56  000A                     	;# 
    57  000B                     	;# 
    58  000C                     	;# 
    59  000D                     	;# 
    60  000E                     	;# 
    61  000E                     	;# 
    62  000F                     	;# 
    63  0010                     	;# 
    64  0011                     	;# 
    65  0012                     	;# 
    66  0013                     	;# 
    67  0014                     	;# 
    68  0015                     	;# 
    69  0015                     	;# 
    70  0016                     	;# 
    71  0017                     	;# 
    72  0018                     	;# 
    73  0019                     	;# 
    74  001A                     	;# 
    75  001B                     	;# 
    76  001B                     	;# 
    77  001C                     	;# 
    78  001D                     	;# 
    79  001E                     	;# 
    80  001F                     	;# 
    81  0081                     	;# 
    82  0085                     	;# 
    83  0086                     	;# 
    84  0087                     	;# 
    85  0088                     	;# 
    86  0089                     	;# 
    87  008C                     	;# 
    88  008D                     	;# 
    89  008E                     	;# 
    90  0091                     	;# 
    91  0092                     	;# 
    92  0093                     	;# 
    93  0094                     	;# 
    94  0098                     	;# 
    95  0099                     	;# 
    96  009C                     	;# 
    97  009D                     	;# 
    98  009E                     	;# 
    99  009F                     	;# 
   100  010C                     	;# 
   101  010D                     	;# 
   102  010E                     	;# 
   103  010F                     	;# 
   104  018C                     	;# 
   105  018D                     	;# 
   106  0000                     	;# 
   107  0001                     	;# 
   108  0002                     	;# 
   109  0003                     	;# 
   110  0004                     	;# 
   111  0005                     	;# 
   112  0006                     	;# 
   113  0007                     	;# 
   114  0008                     	;# 
   115  0009                     	;# 
   116  000A                     	;# 
   117  000B                     	;# 
   118  000C                     	;# 
   119  000D                     	;# 
   120  000E                     	;# 
   121  000E                     	;# 
   122  000F                     	;# 
   123  0010                     	;# 
   124  0011                     	;# 
   125  0012                     	;# 
   126  0013                     	;# 
   127  0014                     	;# 
   128  0015                     	;# 
   129  0015                     	;# 
   130  0016                     	;# 
   131  0017                     	;# 
   132  0018                     	;# 
   133  0019                     	;# 
   134  001A                     	;# 
   135  001B                     	;# 
   136  001B                     	;# 
   137  001C                     	;# 
   138  001D                     	;# 
   139  001E                     	;# 
   140  001F                     	;# 
   141  0081                     	;# 
   142  0085                     	;# 
   143  0086                     	;# 
   144  0087                     	;# 
   145  0088                     	;# 
   146  0089                     	;# 
   147  008C                     	;# 
   148  008D                     	;# 
   149  008E                     	;# 
   150  0091                     	;# 
   151  0092                     	;# 
   152  0093                     	;# 
   153  0094                     	;# 
   154  0098                     	;# 
   155  0099                     	;# 
   156  009C                     	;# 
   157  009D                     	;# 
   158  009E                     	;# 
   159  009F                     	;# 
   160  010C                     	;# 
   161  010D                     	;# 
   162  010E                     	;# 
   163  010F                     	;# 
   164  018C                     	;# 
   165  018D                     	;# 
   166  0006                     _PORTBbits	set	6
   167  0006                     _PORTB	set	6
   168  000B                     _INTCONbits	set	11
   169  0081                     _OPTION_REG	set	129
   170  0435                     _TRISB5	set	1077
   171  0434                     _TRISB4	set	1076
   172  0433                     _TRISB3	set	1075
   173  0432                     _TRISB2	set	1074
   174  0431                     _TRISB1	set	1073
   175  0430                     _TRISB0	set	1072
   176                           
   177                           	psect	cinit
   178  000F                     start_initialization:	
   179                           ; #config settings
   180                           
   181  000F                     __initialization:
   182                           
   183                           ; Clear objects allocated to COMMON
   184  000F  01F3               	clrf	__pbssCOMMON& (0+127)
   185  0010                     end_of_initialization:	
   186                           ;End of C runtime variable initialization code
   187                           
   188  0010                     __end_of__initialization:
   189  0010  0183               	clrf	3
   190  0011  120A  118A  2814   	ljmp	_main	;jump to C main() function
   191                           
   192                           	psect	bssCOMMON
   193  0073                     __pbssCOMMON:
   194  0073                     _i:
   195  0073                     	ds	1
   196                           
   197                           	psect	cstackCOMMON
   198  0070                     __pcstackCOMMON:
   199  0070                     ?_blink:
   200  0070                     ??_blink:	
   201                           ; 1 bytes @ 0x0
   202                           
   203  0070                     ?_main:	
   204                           ; 1 bytes @ 0x0
   205                           
   206                           
   207                           ; 1 bytes @ 0x0
   208  0070                     	ds	3
   209  0073                     ??_main:
   210                           
   211                           	psect	maintext
   212  0014                     __pmaintext:	
   213                           ; 1 bytes @ 0x3
   214 ;;
   215 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   216 ;;
   217 ;; *************** function _main *****************
   218 ;; Defined at:
   219 ;;		line 11 in file "source.c"
   220 ;; Parameters:    Size  Location     Type
   221 ;;		None
   222 ;; Auto vars:     Size  Location     Type
   223 ;;		None
   224 ;; Return value:  Size  Location     Type
   225 ;;                  1    wreg      void 
   226 ;; Registers used:
   227 ;;		wreg, status,2, status,0
   228 ;; Tracked objects:
   229 ;;		On entry : B00/0
   230 ;;		On exit  : 0/0
   231 ;;		Unchanged: 0/0
   232 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   233 ;;      Params:         0       0       0       0       0
   234 ;;      Locals:         0       0       0       0       0
   235 ;;      Temps:          0       0       0       0       0
   236 ;;      Totals:         0       0       0       0       0
   237 ;;Total ram usage:        0 bytes
   238 ;; Hardware stack levels required when called: 1
   239 ;; This function calls:
   240 ;;		Nothing
   241 ;; This function is called by:
   242 ;;		Startup code after reset
   243 ;; This function uses a non-reentrant model
   244 ;;
   245                           
   246                           
   247                           ;psect for function _main
   248  0014                     _main:
   249  0014                     l647:	
   250                           ;incstack = 0
   251                           ; Regs used in _main: [wreg+status,2+status,0]
   252                           
   253                           
   254                           ;source.c: 13: INTCONbits.GIE = 1;
   255  0014  178B               	bsf	11,7	;volatile
   256                           
   257                           ;source.c: 14: INTCONbits.TMR0IE = 1;
   258  0015  168B               	bsf	11,5	;volatile
   259                           
   260                           ;source.c: 15: INTCONbits.PEIE = 1;
   261  0016  170B               	bsf	11,6	;volatile
   262  0017                     l649:
   263                           
   264                           ;source.c: 16: OPTION_REG = 0x07;
   265  0017  3007               	movlw	7
   266  0018  1683               	bsf	3,5	;RP0=1, select bank1
   267  0019  1303               	bcf	3,6	;RP1=0, select bank1
   268  001A  0081               	movwf	1	;volatile
   269  001B                     l651:
   270                           
   271                           ;source.c: 17: TRISB0=1;
   272  001B  1406               	bsf	6,0	;volatile
   273  001C                     l653:
   274                           
   275                           ;source.c: 18: TRISB1=0;
   276  001C  1086               	bcf	6,1	;volatile
   277  001D                     l655:
   278                           
   279                           ;source.c: 19: TRISB2=0;
   280  001D  1106               	bcf	6,2	;volatile
   281  001E                     l657:
   282                           
   283                           ;source.c: 20: TRISB3=0;
   284  001E  1186               	bcf	6,3	;volatile
   285  001F                     l659:
   286                           
   287                           ;source.c: 21: TRISB4=0;
   288  001F  1206               	bcf	6,4	;volatile
   289  0020                     l661:
   290                           
   291                           ;source.c: 22: TRISB5=0;
   292  0020  1286               	bcf	6,5	;volatile
   293  0021                     l663:
   294                           
   295                           ;source.c: 23: PORTB =0x00;
   296  0021  1283               	bcf	3,5	;RP0=0, select bank0
   297  0022  1303               	bcf	3,6	;RP1=0, select bank0
   298  0023  0186               	clrf	6	;volatile
   299  0024                     l665:
   300                           
   301                           ;source.c: 25: if(PORTBbits.RB0==1)
   302  0024  1C06               	btfss	6,0	;volatile
   303  0025  2827               	goto	u21
   304  0026  2828               	goto	u20
   305  0027                     u21:
   306  0027  2899               	goto	l49
   307  0028                     u20:
   308  0028                     l667:
   309                           
   310                           ;source.c: 27: {;source.c: 28: if(i==0)
   311  0028  0873               	movf	_i,w
   312  0029  1D03               	btfss	3,2
   313  002A  282C               	goto	u31
   314  002B  282D               	goto	u30
   315  002C                     u31:
   316  002C  2830               	goto	l671
   317  002D                     u30:
   318  002D                     l669:
   319                           
   320                           ;source.c: 29: PORTB=0x00;
   321  002D  1283               	bcf	3,5	;RP0=0, select bank0
   322  002E  1303               	bcf	3,6	;RP1=0, select bank0
   323  002F  0186               	clrf	6	;volatile
   324  0030                     l671:
   325                           
   326                           ;source.c: 30: if(i==1)
   327  0030  0373               	decf	_i,w
   328  0031  1D03               	btfss	3,2
   329  0032  2834               	goto	u41
   330  0033  2835               	goto	u40
   331  0034                     u41:
   332  0034  2839               	goto	l675
   333  0035                     u40:
   334  0035                     l673:
   335                           
   336                           ;source.c: 31: PORTB=0x02;
   337  0035  3002               	movlw	2
   338  0036  1283               	bcf	3,5	;RP0=0, select bank0
   339  0037  1303               	bcf	3,6	;RP1=0, select bank0
   340  0038  0086               	movwf	6	;volatile
   341  0039                     l675:
   342                           
   343                           ;source.c: 32: if(i==2)
   344  0039  3002               	movlw	2
   345  003A  0673               	xorwf	_i,w
   346  003B  1D03               	btfss	3,2
   347  003C  283E               	goto	u51
   348  003D  283F               	goto	u50
   349  003E                     u51:
   350  003E  2843               	goto	l679
   351  003F                     u50:
   352  003F                     l677:
   353                           
   354                           ;source.c: 33: PORTB=0x04;
   355  003F  3004               	movlw	4
   356  0040  1283               	bcf	3,5	;RP0=0, select bank0
   357  0041  1303               	bcf	3,6	;RP1=0, select bank0
   358  0042  0086               	movwf	6	;volatile
   359  0043                     l679:
   360                           
   361                           ;source.c: 34: if(i==3)
   362  0043  3003               	movlw	3
   363  0044  0673               	xorwf	_i,w
   364  0045  1D03               	btfss	3,2
   365  0046  2848               	goto	u61
   366  0047  2849               	goto	u60
   367  0048                     u61:
   368  0048  284D               	goto	l683
   369  0049                     u60:
   370  0049                     l681:
   371                           
   372                           ;source.c: 35: PORTB=0x08;
   373  0049  3008               	movlw	8
   374  004A  1283               	bcf	3,5	;RP0=0, select bank0
   375  004B  1303               	bcf	3,6	;RP1=0, select bank0
   376  004C  0086               	movwf	6	;volatile
   377  004D                     l683:
   378                           
   379                           ;source.c: 36: if(i==4)
   380  004D  3004               	movlw	4
   381  004E  0673               	xorwf	_i,w
   382  004F  1D03               	btfss	3,2
   383  0050  2852               	goto	u71
   384  0051  2853               	goto	u70
   385  0052                     u71:
   386  0052  2857               	goto	l687
   387  0053                     u70:
   388  0053                     l685:
   389                           
   390                           ;source.c: 37: PORTB=0x10;
   391  0053  3010               	movlw	16
   392  0054  1283               	bcf	3,5	;RP0=0, select bank0
   393  0055  1303               	bcf	3,6	;RP1=0, select bank0
   394  0056  0086               	movwf	6	;volatile
   395  0057                     l687:
   396                           
   397                           ;source.c: 38: if(i==5)
   398  0057  3005               	movlw	5
   399  0058  0673               	xorwf	_i,w
   400  0059  1D03               	btfss	3,2
   401  005A  285C               	goto	u81
   402  005B  285D               	goto	u80
   403  005C                     u81:
   404  005C  2861               	goto	l691
   405  005D                     u80:
   406  005D                     l689:
   407                           
   408                           ;source.c: 39: PORTB=0x20;
   409  005D  3020               	movlw	32
   410  005E  1283               	bcf	3,5	;RP0=0, select bank0
   411  005F  1303               	bcf	3,6	;RP1=0, select bank0
   412  0060  0086               	movwf	6	;volatile
   413  0061                     l691:
   414                           
   415                           ;source.c: 40: if(i==6)
   416  0061  3006               	movlw	6
   417  0062  0673               	xorwf	_i,w
   418  0063  1D03               	btfss	3,2
   419  0064  2866               	goto	u91
   420  0065  2867               	goto	u90
   421  0066                     u91:
   422  0066  286B               	goto	l695
   423  0067                     u90:
   424  0067                     l693:
   425                           
   426                           ;source.c: 41: PORTB=0x20;
   427  0067  3020               	movlw	32
   428  0068  1283               	bcf	3,5	;RP0=0, select bank0
   429  0069  1303               	bcf	3,6	;RP1=0, select bank0
   430  006A  0086               	movwf	6	;volatile
   431  006B                     l695:
   432                           
   433                           ;source.c: 42: if(i==7)
   434  006B  3007               	movlw	7
   435  006C  0673               	xorwf	_i,w
   436  006D  1D03               	btfss	3,2
   437  006E  2870               	goto	u101
   438  006F  2871               	goto	u100
   439  0070                     u101:
   440  0070  2875               	goto	l699
   441  0071                     u100:
   442  0071                     l697:
   443                           
   444                           ;source.c: 43: PORTB=0x10;
   445  0071  3010               	movlw	16
   446  0072  1283               	bcf	3,5	;RP0=0, select bank0
   447  0073  1303               	bcf	3,6	;RP1=0, select bank0
   448  0074  0086               	movwf	6	;volatile
   449  0075                     l699:
   450                           
   451                           ;source.c: 44: if(i==8)
   452  0075  3008               	movlw	8
   453  0076  0673               	xorwf	_i,w
   454  0077  1D03               	btfss	3,2
   455  0078  287A               	goto	u111
   456  0079  287B               	goto	u110
   457  007A                     u111:
   458  007A  287F               	goto	l703
   459  007B                     u110:
   460  007B                     l701:
   461                           
   462                           ;source.c: 45: PORTB=0x08;
   463  007B  3008               	movlw	8
   464  007C  1283               	bcf	3,5	;RP0=0, select bank0
   465  007D  1303               	bcf	3,6	;RP1=0, select bank0
   466  007E  0086               	movwf	6	;volatile
   467  007F                     l703:
   468                           
   469                           ;source.c: 46: if(i==9)
   470  007F  3009               	movlw	9
   471  0080  0673               	xorwf	_i,w
   472  0081  1D03               	btfss	3,2
   473  0082  2884               	goto	u121
   474  0083  2885               	goto	u120
   475  0084                     u121:
   476  0084  2889               	goto	l707
   477  0085                     u120:
   478  0085                     l705:
   479                           
   480                           ;source.c: 47: PORTB=0x04;
   481  0085  3004               	movlw	4
   482  0086  1283               	bcf	3,5	;RP0=0, select bank0
   483  0087  1303               	bcf	3,6	;RP1=0, select bank0
   484  0088  0086               	movwf	6	;volatile
   485  0089                     l707:
   486                           
   487                           ;source.c: 48: if(i==10)
   488  0089  300A               	movlw	10
   489  008A  0673               	xorwf	_i,w
   490  008B  1D03               	btfss	3,2
   491  008C  288E               	goto	u131
   492  008D  288F               	goto	u130
   493  008E                     u131:
   494  008E  2893               	goto	l711
   495  008F                     u130:
   496  008F                     l709:
   497                           
   498                           ;source.c: 49: PORTB=0x02;
   499  008F  3002               	movlw	2
   500  0090  1283               	bcf	3,5	;RP0=0, select bank0
   501  0091  1303               	bcf	3,6	;RP1=0, select bank0
   502  0092  0086               	movwf	6	;volatile
   503  0093                     l711:
   504                           
   505                           ;source.c: 50: if(i==11)
   506  0093  300B               	movlw	11
   507  0094  0673               	xorwf	_i,w
   508  0095  1D03               	btfss	3,2
   509  0096  2898               	goto	u141
   510  0097  2899               	goto	u140
   511  0098                     u141:
   512  0098  2828               	goto	l667
   513  0099                     u140:
   514  0099                     l49:
   515  0099  120A  118A  280C   	ljmp	start
   516  009C                     __end_of_main:
   517                           
   518                           	psect	text1
   519  009C                     __ptext1:	
   520 ;; *************** function _blink *****************
   521 ;; Defined at:
   522 ;;		line 4 in file "source.c"
   523 ;; Parameters:    Size  Location     Type
   524 ;;		None
   525 ;; Auto vars:     Size  Location     Type
   526 ;;		None
   527 ;; Return value:  Size  Location     Type
   528 ;;                  1    wreg      void 
   529 ;; Registers used:
   530 ;;		wreg, status,2, status,0
   531 ;; Tracked objects:
   532 ;;		On entry : 0/0
   533 ;;		On exit  : 0/0
   534 ;;		Unchanged: 0/0
   535 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   536 ;;      Params:         0       0       0       0       0
   537 ;;      Locals:         0       0       0       0       0
   538 ;;      Temps:          3       0       0       0       0
   539 ;;      Totals:         3       0       0       0       0
   540 ;;Total ram usage:        3 bytes
   541 ;; Hardware stack levels used: 1
   542 ;; This function calls:
   543 ;;		Nothing
   544 ;; This function is called by:
   545 ;;		Interrupt level 1
   546 ;; This function uses a non-reentrant model
   547 ;;
   548                           
   549                           
   550                           ;psect for function _blink
   551  009C                     _blink:
   552  009C                     i1l641:
   553                           
   554                           ;source.c: 6: if( INTCONbits.TMR0IF == 1)
   555  009C  1D0B               	btfss	11,2	;volatile
   556  009D  289F               	goto	u1_21
   557  009E  28A0               	goto	u1_20
   558  009F                     u1_21:
   559  009F  28A4               	goto	i1l645
   560  00A0                     u1_20:
   561  00A0                     i1l643:
   562                           
   563                           ;source.c: 7: { i++;}
   564  00A0  3001               	movlw	1
   565  00A1  00F0               	movwf	??_blink
   566  00A2  0870               	movf	??_blink,w
   567  00A3  07F3               	addwf	_i,f
   568  00A4                     i1l645:
   569                           
   570                           ;source.c: 8: INTCONbits.TMR0IF = 0;
   571  00A4  110B               	bcf	11,2	;volatile
   572  00A5                     i1l28:
   573  00A5  0872               	movf	??_blink+2,w
   574  00A6  008A               	movwf	10
   575  00A7  0E71               	swapf	??_blink+1,w
   576  00A8  0083               	movwf	3
   577  00A9  0EFE               	swapf	btemp,f
   578  00AA  0E7E               	swapf	btemp,w
   579  00AB  0009               	retfie
   580  00AC                     __end_of_blink:
   581  007E                     btemp	set	126	;btemp
   582  007E                     wtemp0	set	126
   583                           
   584                           	psect	intentry
   585  0004                     __pintentry:	
   586                           ;incstack = 0
   587                           ; Regs used in _blink: [wreg+status,2+status,0]
   588                           
   589  0004                     interrupt_function:
   590  007E                     saved_w	set	btemp
   591  0004  00FE               	movwf	btemp
   592  0005  0E03               	swapf	3,w
   593  0006  00F1               	movwf	??_blink+1
   594  0007  080A               	movf	10,w
   595  0008  00F2               	movwf	??_blink+2
   596  0009  120A  118A  289C   	ljmp	_blink

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      3       4
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _blink in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _blink in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _blink in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _blink in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _blink in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (1) _blink                                                3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 _blink (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      3       4       1       28.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       4       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       4      12        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Sun Dec 26 17:34:22 2021

                      _i 0073                       l49 0099                       u20 0028  
                     u21 0027                       u30 002D                       u31 002C  
                     u40 0035                       u41 0034                       u50 003F  
                     u51 003E                       u60 0049                       u61 0048  
                     u70 0053                       u71 0052                       u80 005D  
                     u81 005C                       u90 0067                       u91 0066  
                    l701 007B                      l711 0093                      l703 007F  
                    l705 0085                      l707 0089                      l651 001B  
                    l709 008F                      l661 0020                      l653 001C  
                    l671 0030                      l663 0021                      l655 001D  
                    l647 0014                      l681 0049                      l673 0035  
                    l665 0024                      l657 001E                      l649 0017  
                    l691 0061                      l683 004D                      l675 0039  
                    l667 0028                      l659 001F                      l693 0067  
                    l685 0053                      l677 003F                      l669 002D  
                    l695 006B                      l687 0057                      l679 0043  
                    l697 0071                      l689 005D                      l699 0075  
                    u100 0071                      u101 0070                      u110 007B  
                    u111 007A                      u120 0085                      u121 0084  
                    u130 008F                      u131 008E                      u140 0099  
                    u141 0098                     i1l28 00A5                     u1_20 00A0  
                   u1_21 009F                     _main 0014                     btemp 007E  
                   start 000C                    ?_main 0070                    i1l641 009C  
                  i1l643 00A0                    i1l645 00A4                    _PORTB 0006  
                  _blink 009C                    pclath 000A                    status 0003  
                  wtemp0 007E          __initialization 000F             __end_of_main 009C  
                 ??_main 0073                   ?_blink 0070                   _TRISB0 0430  
                 _TRISB1 0431                   _TRISB2 0432                   _TRISB3 0433  
                 _TRISB4 0434                   _TRISB5 0435                   saved_w 007E  
__end_of__initialization 0010           __pcstackCOMMON 0070            __end_of_blink 00AC  
                ??_blink 0070               __pmaintext 0014               __pintentry 0004  
                __ptext1 009C     end_of_initialization 0010                _PORTBbits 0006  
    start_initialization 000F              __pbssCOMMON 0073                ___latbits 0002  
         __size_of_blink 0010        interrupt_function 0004            __size_of_main 0088  
             _INTCONbits 000B                 intlevel1 0000               _OPTION_REG 0081  
